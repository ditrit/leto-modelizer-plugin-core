[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/assets/actions/actionIcons.js",
    "content": "const actionIcons = {\n  trash: '<svg viewBox=\"0 0 24 24\"><path fill=\"black\" d=\"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\" /></svg>',\n  edit: '<svg viewBox=\"0 0 24 24\"><path fill=\"black\" d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\" /></svg>',\n  link: '<svg viewBox=\"0 0 24 24\"><g><path fill=\"black\" d=\"M19,15.18V7c0-2.21-1.79-4-4-4s-4,1.79-4,4v10c0,1.1-0.9,2-2,2s-2-0.9-2-2V8.82C8.16,8.4,9,7.3,9,6c0-1.66-1.34-3-3-3 S3,4.34,3,6c0,1.3,0.84,2.4,2,2.82V17c0,2.21,1.79,4,4,4s4-1.79,4-4V7c0-1.1,0.9-2,2-2s2,0.9,2,2v8.18c-1.16,0.41-2,1.51-2,2.82 c0,1.66,1.34,3,3,3s3-1.34,3-3C21,16.7,20.16,15.6,19,15.18z M6,7C5.45,7,5,6.55,5,6s0.45-1,1-1s1,0.45,1,1S6.55,7,6,7z M18,19 c-0.55,0-1-0.45-1-1s0.45-1,1-1s1,0.45,1,1S18.55,19,18,19z\"/></svg>',\n};\n\nexport default actionIcons;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/assets/actions/actionIcons.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "actionIcons",
    "memberof": "src/assets/actions/actionIcons.js",
    "static": true,
    "longname": "src/assets/actions/actionIcons.js~actionIcons",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/assets/actions/actionIcons.js",
    "importStyle": "actionIcons",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"trash\": string, \"edit\": string, \"link\": string}"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/draw/DefaultDrawer.js",
    "content": "import * as d3 from 'd3';\nimport nunjucks from 'nunjucks';\nimport ComponentDrawOption from '../models/ComponentDrawOption';\nimport actionIcons from '../assets/actions/actionIcons';\nimport ComponentLink from '../models/ComponentLink';\n\n/**\n * Class that draws a component in a graphical representation.\n * @interface\n */\nclass DefaultDrawer {\n  /**\n   * Default constructor\n   * @param {DefaultData} pluginData - Plugin data storage.\n   * @param {Object} [resources=null] - Object that contains resources.\n   * @param {Object} [events] - Events list.\n   * @param {Function} [events.SelectEvent.next] - Function to emit selection event.\n   * @param {Function} [events.UpdateEvent.next] - Function to emit update event.\n   * @param {String} [rootId=\"root\"] - Id of HTML element where we want to draw.\n   * @param {Object} [options={}] - Rendering options.\n   * @param {Number} [options.width=1280] - Render svg viewbox width.\n   * @param {Number} [options.height=1280] - Render svg viewbox height.\n   * @param {Number} [options.minWidth=230] - Minimum width of a component.\n   * @param {Number} [options.minHeight=50] - Minimum height of a component.\n   * @param {Number} [options.padding=30] - Padding around a component.\n   * @param {Number} [options.margin=6] - Component margin thickness.\n   * @param {Number[]} [options.lineLengthPerDepth=[5,1]] - Number of components\n   * per line at a given depth. Valid values: 1 - Infinity.\n   * @param {Number} [options.actionMenuButtonSize] - The size of each action menu button.\n   */\n  constructor(pluginData, resources = null, events = {\n    SelectEvent: null,\n    UpdateEvent: null,\n  }, rootId = 'root', options = {}) {\n    /**\n     * Plugin data storage.\n     * @type {DefaultData}\n     */\n    this.pluginData = pluginData;\n    /**\n     * Id of HTML element where we want to draw.\n     * @type {String}\n     */\n    this.rootId = rootId;\n    /**\n     * Object that contains resources.\n     * @type {Object}\n     */\n    this.resources = resources;\n    /**\n     * Render svg viewbox width.\n     * @type {Number}\n     */\n    this.width = options.width !== undefined ? options.width : 1280;\n    /**\n     * Render svg viewbox height.\n     * @type {Number}\n     */\n    this.height = options.height !== undefined ? options.height : 1280;\n    /**\n     * Minimum width of a component.\n     * @type {Number}\n     */\n    this.minWidth = options.minWidth !== undefined ? options.minWidth : 230;\n    /**\n     * Minimum height of a component.\n     * @type {Number}\n     */\n    this.minHeight = options.minHeight !== undefined ? options.minHeight : 50;\n    /**\n     * Padding around components.\n     * @type {Number}\n     */\n    this.padding = options.padding !== undefined ? options.padding : 30;\n    /**\n     * Component margin thickness.\n     * @type {Number}\n     */\n    this.margin = options.margin !== undefined ? options.margin : 6;\n    /**\n     * Number of components per line at a given depth. Valid values: 1 - Infinity.\n     * @type {Number[]}\n     */\n    this.lineLengthPerDepth = options.lineLengthPerDepth !== undefined\n      ? options.lineLengthPerDepth : [5, 1];\n\n    /**\n     * The size of each action menu button.\n     * @type {Number}\n     */\n    this.actionMenuButtonSize = options.actionMenuButtonSize || 24;\n    /**\n     * Store for actions, used to set specific actions values when making actions.\n     * @type {Object}\n     */\n    this.actions = {\n      selection: {\n        current: null,\n        style: '2px solid hsl(205, 100%, 50%)',\n        offset: '3px',\n      },\n      linkCreation: {\n        source: null,\n        target: null,\n        creating: false,\n      },\n      drag: {\n        offsetX: 0,\n        offsetY: 0,\n        state: false,\n        target: null,\n      },\n    };\n\n    this.setEvents(events);\n  }\n\n  /**\n   * Convert screen coordinates into a given svg referential.\n   * @param {Number} screenX - Screen x coordinate.\n   * @param {Number} screenY - Screen y coordinate.\n   * @param {SVGSVGElement} [svg=null] - SVG referential.\n   * @return {DOMPoint} - The transformed coordinates.\n   */\n  screenToSVG(screenX, screenY, svg = null) {\n    const localSvg = svg || this.svg.node();\n    const pivotPoint = new DOMPoint(screenX, screenY);\n\n    return pivotPoint.matrixTransform(localSvg.getScreenCTM().inverse());\n  }\n\n  /**\n   * Convert svg coordinates into screen coordinates.\n   * @param {Number} svgX - SVG x coordinate.\n   * @param {Number} svgY - SVG y coordinate.\n   * @param {SVGSVGElement} [svg=null] - SVG referential.\n   * @return {DOMPoint} - The transformed coordinates.\n   */\n  SVGToScreen(svgX, svgY, svg = null) {\n    const localSvg = svg || this.svg.node();\n    const pivotPoint = new DOMPoint(svgX, svgY);\n\n    return pivotPoint.matrixTransform(localSvg.getScreenCTM());\n  }\n\n  /**\n   * Set events.\n   * @param {Function} [events.SelectEvent.next] - Function to emit selection event.\n   * @param {Function} [events.UpdateEvent.next] - Function to emit update event.\n   */\n  setEvents(events = {\n    SelectEvent: null,\n    UpdateEvent: null,\n  }) {\n    this.events = {\n      SelectEvent: events.SelectEvent || null,\n      UpdateEvent: events.UpdateEvent || null,\n    };\n  }\n\n  /**\n   * Emit UpdateEvent if defined.\n   */\n  emitUpdateEvent() {\n    // TODO: replace by: if (this.events?.UpdateEvent) {\n    if (this.events && this.events.UpdateEvent) {\n      this.events.UpdateEvent.next();\n    }\n  }\n\n  /**\n   * Compute a coefficient representing how tall a component will be based on its children's layout.\n   * @param {Node} item - The component to check.\n   * @return {Number} - The coefficient.\n   * @private\n   */\n  __getVerticalCoefficient(item) {\n    // TODO: replace by: if (item.children?.length > 0) {\n    if (item.children && item.children.length > 0) {\n      const childHeights = Math.ceil(\n        item.children\n          // TODO: replace by: .filter((child) => child.data?.definition?.isContainer)\n          .filter((child) => child\n            && child.data\n            && child.data.definition\n            && child.data.definition.isContainer)\n          .reduce(\n            (acc, child) => acc + this.__getVerticalCoefficient(child),\n            0,\n          ),\n      );\n      const localChildValue = item.children\n        // TODO: replace by: .filter((child) => !child.data?.definition?.isContainer)\n        .filter((child) => !(child\n          && child.data\n          && child.data.definition\n          && child.data.definition.isContainer))\n        .reduce((acc, child) => acc + child.value, 0);\n\n      return localChildValue / this.getLineLengthForDepth(item.depth)\n        + childHeights\n        // TODO: replace by: + (item.data?.definition?.isContainer ? 1 : 0);\n        + ((item.data\n          && item.data.definition\n          && item.data.definition.isContainer)\n          ? 1 : 0);\n    }\n\n    return item.value / this.getLineLengthForDepth(item.depth)\n      // TODO: replace by: + (item.data?.definition?.isContainer ? 1 : 0);\n      + ((item.data\n        && item.data.definition\n        && item.data.definition.isContainer)\n        ? 1 : 0);\n  }\n\n  /**\n   * Get the maximum line length for a given depth.\n   * @param {Number} [depth] - The depth to check.\n   * @return {Number} - The maximum length at that depth.\n   */\n  getLineLengthForDepth(depth) {\n    return this.lineLengthPerDepth[Math.min(depth, this.lineLengthPerDepth.length - 1)];\n  }\n\n  /**\n   * Apply the disabled style to all elements matching the selector.\n   * @param {String} [selector='.component'] - CSS selector string.\n   */\n  setDisabledStyle(selector = '.component') {\n    const localSelector = `#${this.rootId} ${selector || '.component'}`;\n\n    d3.selectAll(localSelector)\n      .classed('disabled', true);\n  }\n\n  /**\n   * Remove the disabled style from previously disabled components.\n   */\n  unsetAllDisabledStyles() {\n    d3.selectAll(`#${this.rootId} .disabled`)\n      .classed('disabled', false);\n  }\n\n  /**\n   * Handles dragging a component across the screen and return the element it will be dropped on.\n   * @param {Element} draggedElement - The DOM element being dragged.\n   * @param {DragEvent} event - The emitted drag event.\n   * @return {Element} - The element to drop the dragged element onto.\n   */\n  dragHandler(draggedElement, event) {\n    this.hideActionMenu();\n\n    const dropTarget = document\n      .elementsFromPoint(event.sourceEvent.x, event.sourceEvent.y)\n      .find((element) => event.subject.data.id !== element.dataset.parentId && (\n        element.classList.contains('container-background')\n        || element.classList.contains('container')\n      ));\n\n    const target = d3.select(`#${event.subject.data.id}`).attr('cursor', 'grabbing');\n\n    d3.select('#root-components')\n      .append(() => target.node());\n\n    const rootSVGPoint = this.screenToSVG(\n      event.sourceEvent.clientX,\n      event.sourceEvent.clientY,\n      this.svg.select('.container').node(),\n    );\n\n    d3.select(draggedElement)\n      .attr(\n        'transform',\n        event.subject.transform = `translate(${rootSVGPoint.x - this.actions.drag.offsetX},\n        ${rootSVGPoint.y - this.actions.drag.offsetY})`,\n      );\n\n    event.subject.x = rootSVGPoint.x - this.actions.drag.offsetX;\n    event.subject.y = rootSVGPoint.y - this.actions.drag.offsetY;\n    if (event.subject.data.definition) {\n      const forbiddenTypes = event.subject.data.definition.parentTypes\n        .map((type) => `:not(.${type})`)\n        .join('');\n\n      this.setDisabledStyle(`.component:not(#${event.subject.data.id})${forbiddenTypes}`);\n    }\n\n    this.drawLinks();\n\n    return dropTarget;\n  }\n\n  /**\n   * Create and return d3 drag behaviour.\n   * @return {Function} - D3 drag behaviour.\n   */\n  setupDragBehavior() {\n    let dropTarget = null;\n    let itemWasDragged = false;\n    const dragHandler = this.dragHandler.bind(this);\n\n    return d3.drag()\n      .subject((event) => {\n        const target = document.elementFromPoint(event.sourceEvent.x, event.sourceEvent.y);\n        const targetData = d3.select(target);\n\n        return targetData.datum();\n      })\n      .on('start', (event) => {\n        this.actions.drag.offsetX = event.x - event.subject.x0;\n        this.actions.drag.offsetY = event.y - event.subject.y0;\n      })\n      .on('drag', function dragged(event) {\n        dropTarget = dragHandler(this, event);\n        itemWasDragged = true;\n      })\n      .on('end', (event) => {\n        if (itemWasDragged) {\n          this.handleDropEvent(event, dropTarget);\n        }\n      });\n  }\n\n  /**\n   * Starting from a given node, recursively mark all parent nodes as needing a resize.\n   * @param {Node} node - The node to start from.\n   * @private\n   */\n  __markAsNeedingResize(node) {\n    if (node.data.drawOption) {\n      node.data.drawOption.needsResizing = true;\n    }\n    if (node.parent) {\n      this.__markAsNeedingResize(node.parent);\n    }\n  }\n\n  /**\n   * Update component hierarchy and re-render.\n   * @param {DragEvent} event - D3's drag event.\n   * @param {Element} dropTarget - The element on which the dragged component was dropped.\n   */\n  handleDropEvent(event, dropTarget) {\n    const origParent = this.pluginData.getComponentById(event.subject.parent.data.id);\n    const target = dropTarget ? d3.select(dropTarget) : null;\n\n    if (target === origParent) {\n      const { x, y } = event.subject;\n      const width = event.subject.x1 - event.subject.x0;\n      const height = event.subject.y1 - event.subject.y0;\n\n      event.subject.data.drawOption = new ComponentDrawOption({\n        x, y, width, height,\n      });\n    } else {\n      if (event.subject.parent) {\n        this.__markAsNeedingResize(event.subject.parent);\n      }\n      event.subject.data.drawOption = null;\n\n      if (target) {\n        const parentId = target.attr('data-parentId');\n        const newParent = this.pluginData.getComponentById(parentId);\n        const newParentNode = d3.select(`#${parentId}`).datum();\n\n        if (newParent.definition.childrenTypes.includes(event.subject.data.definition.type)) {\n          event.subject.data.setReferenceAttribute(newParent);\n          this.__markAsNeedingResize(newParentNode);\n        }\n      } else {\n        event.subject.data.removeAllReferenceAttributes();\n      }\n    }\n\n    this.emitUpdateEvent();\n    this.draw(this.rootId);\n  }\n\n  /**\n   * Create a new svg to render the models in, or fetch an existing one.\n   */\n  createRenderingContext() {\n    const contextIsPresent = !d3.select(`#${this.rootId}>svg`).empty();\n\n    if (!contextIsPresent) {\n      this.svg = d3.select(`#${this.rootId}`)\n        .append('svg')\n        .attr('viewBox', [0, 0, this.width, this.height])\n        .attr('preserveAspectRatio', 'xMinYMin meet')\n        .style('font', '10px sans-serif');\n      this.svg.append('g')\n        .attr('class', 'container')\n        .attr('height', '100%')\n        .attr('width', '100%')\n        .attr('x', 0)\n        .attr('y', 0);\n    } else {\n      this.svg = d3.select(`#${this.rootId}`)\n        .select('svg');\n    }\n  }\n\n  /**\n   * Draws all Components and ComponentLinks in the parentId Element.\n   * @param {String} rootId - Id of the container where you want to draw.\n   */\n  draw(rootId) {\n    this.rootId = rootId;\n    this.createRenderingContext();\n\n    this.__unselectComponent();\n\n    this.drawComponents();\n\n    this.drawLinks();\n\n    this.setViewPortAction(d3.select(`#${this.rootId}`));\n  }\n\n  /**\n   * Handle component click event. Set selected style on it.\n   * @param {PointerEvent} event - The click event.\n   */\n  clickHandler(event) {\n    event.stopPropagation();\n    this.__selectComponent(d3.select(event.currentTarget));\n  }\n\n  /**\n   * Render components in model view.\n   */\n  drawComponents() {\n    this.shadowRoot = { children: this.pluginData.components, id: '__shadowRoot', name: '' };\n    const groupedNodes = this.buildTree();\n    const clicked = this.clickHandler.bind(this);\n    const drag = this.setupDragBehavior();\n    const node = this.svg\n      .select('.container')\n      .selectAll('g')\n      .data(groupedNodes, (data) => data)\n      .join('g')\n      .attr('id', ([data]) => data)\n      .selectAll('g')\n      .data(([, data]) => data)\n      .join('g')\n      .attr('id', ({ data }) => data.id)\n      .on('click', clicked)\n      .call(drag)\n      .attr('x', ({ x0 }) => x0)\n      .attr('y', ({ y0 }) => y0)\n      .attr('transform', ({ x0, y0 }) => `translate(${x0},${y0})`);\n\n    node\n      .filter(({ data }) => data.id !== '__shadowRoot')\n      .attr('class', ({ data }) => `component\n        component-${data.definition.model}\n        ${data.definition.type}`)\n      .html(({ data }) => nunjucks.renderString(\n        this.resources.models[data.definition.model],\n        data,\n      ))\n      .select('svg')\n      .attr('id', ({ data }) => `svg-${data.id}`)\n      .attr('height', ({ y0, y1 }) => y1 - y0)\n      .attr('width', ({ x0, x1 }) => x1 - x0);\n\n    node.select('.component-icon')\n      .html(({ data }) => this.resources.icons[data.definition.icon]);\n\n    node.select('rect')\n      // TODO replace by: .filter((d) => d.data?.definition?.isContainer)\n      .filter((d) => d.data\n        && d.data.definition\n        && d.data.definition.isContainer)\n      .attr('height', ({ y0, y1 }) => y1 - y0)\n      .attr('width', ({ x0, x1 }) => x1 - x0);\n\n    node.select('.component-container')\n      .attr('height', ({ y0, y1 }) => Math.max(\n        y1 - (y0 + this.minHeight) - this.margin,\n        this.minHeight,\n      ))\n      .attr('width', ({ x0, x1 }) => Math.max(x1 - x0 - 2 * this.margin, this.minWidth))\n      .attr('x', () => this.margin)\n      .attr('y', () => this.minHeight)\n      .filter(({ children }) => children)\n      .append(({ data }) => d3.select(`#group-${data.id}`).node());\n\n    node.select('.component-container>rect').attr('data-parentId', ({ data }) => data.id);\n  }\n\n  /**\n   * Build d3 hierarchy and treemap layout.\n   * @return {[String, Node[]][]} - The nodes grouped by parent.\n   */\n  buildTree() {\n    const treemapLayout = d3.treemap()\n      .size([this.width, this.height])\n      .tile((data) => {\n        const lines = this.__buildLines(data);\n\n        this.setupTiles(lines);\n        // TODO save/load coordinates\n      })\n      .round(true);\n    const rootNode = d3.hierarchy(\n      this.shadowRoot,\n      ({ id }) => this.pluginData.getChildren(id === '__shadowRoot' ? null : id),\n    );\n\n    rootNode\n      .count()\n      .sort((a, b) => (b.height - a.height)\n        || (b.value - a.value)\n        || ((b.data && b.data.definition && b.data.definition.isContainer ? 1 : 0)\n          - (a.data && a.data.definition && a.data.definition.isContainer ? 1 : 0))\n        || ((a.data && a.data.drawOption ? 1 : 0)\n          - (b.data && b.data.drawOption ? 1 : 0)));\n    /* TODO replace above by: || (b.data.definition?.isContainer || 0)\n            - (a.data.definition?.isContainer || 0)); */\n\n    treemapLayout(rootNode);\n\n    return d3.groups(\n      rootNode,\n      ({ parent }) => (parent\n      && parent.data.id !== '__shadowRoot'\n        ? `group-${parent.data.id}`\n        : 'root-components'),\n    ).filter(([data]) => data !== 'root-__shadowRoot');\n  }\n\n  /**\n   * Get the most appropriate anchor point for a link towards the given target.\n   * @param {Selection} sourceSelection - The source D3 selection object.\n   * @param {Selection} targetSelection - The target D3 selection object.\n   * @return {Number[]|null} - Tuple representing x,y coordinates,\n   * null if lacking source and/or target. Format required by d3.\n   */\n  getAnchorPoint(sourceSelection, targetSelection) {\n    if (sourceSelection.empty() || targetSelection.empty()) {\n      return null;\n    }\n\n    const sourceCoords = sourceSelection.node().getBoundingClientRect();\n    const sourceCenter = this.getSelectionCenter(sourceSelection);\n    const targetCenter = this.getSelectionCenter(targetSelection);\n\n    const angle = this.getBearing(\n      this.screenToSVG(sourceCenter.x, sourceCenter.y, this.svg.select('.container').node()),\n      this.screenToSVG(targetCenter.x, targetCenter.y, this.svg.select('.container').node()),\n    );\n\n    const topAnchor = {\n      y: sourceCoords.top,\n      x: sourceCoords.x + (sourceCoords.width / 2),\n    };\n    const bottomAnchor = {\n      y: sourceCoords.bottom,\n      x: sourceCoords.x + (sourceCoords.width / 2),\n    };\n    const leftAnchor = {\n      x: sourceCoords.left,\n      y: sourceCoords.top + (sourceCoords.height / 2),\n    };\n    const rightAnchor = {\n      x: sourceCoords.right,\n      y: sourceCoords.top + (sourceCoords.height / 2),\n    };\n    let anchorPoint;\n\n    if (angle < 45 || angle >= 315) {\n      anchorPoint = bottomAnchor;\n    } else if (angle >= 45 && angle < 135) {\n      anchorPoint = rightAnchor;\n    } else if (angle >= 135 && angle < 225) {\n      anchorPoint = topAnchor;\n    } else {\n      anchorPoint = leftAnchor;\n    }\n\n    const { x, y } = this.screenToSVG(anchorPoint.x, anchorPoint.y);\n\n    return [x, y];\n  }\n\n  /**\n   * Render links in model view.\n   */\n  drawLinks() {\n    const pluginLinks = this.pluginData.getLinks();\n\n    if (!pluginLinks) {\n      return;\n    }\n\n    const links = this.svg\n      .selectAll('.link');\n\n    links.data(pluginLinks, (data) => data)\n      .join('path')\n      .filter(({ source, target }) => !d3.select(`#${source}`).empty()\n        && !d3.select(`#${target}`).empty())\n      .classed('link', true)\n      .attr('d', (link) => {\n        const generator = this.getLinkGenerator(link);\n\n        return generator(link);\n      })\n      .attr('fill', 'none')\n      .attr('stroke', (link) => link.definition.color)\n      .attr('stroke-width', (link) => link.definition.width)\n      .attr('stroke-dasharray', (link) => link.definition.dashStyle || 'none')\n      .attr('cursor', 'pointer')\n      .on('click', (event) => this.clickHandler(event));\n\n    links.raise();\n  }\n\n  /**\n   * Get the coordinates for a given selection's center.\n   * @param {Selection} selection - The selection to find the center for.\n   */\n  getSelectionCenter(selection) {\n    const box = selection.node().getBoundingClientRect();\n\n    return {\n      x: box.left + (box.width / 2),\n      y: box.top + (box.height / 2),\n    };\n  }\n\n  /**\n   * Get the angle (in degrees) between two points.\n   * 0 = pointB is directly below.\n   * 180 = pointB is directly above.\n   * @param {Object} pointA - The point to get the bearing from.\n   * @param {Object} pointB - The point to get the bearing to.\n   * @return {Number} - The bearing.\n   */\n  getBearing(pointA, pointB) {\n    const distanceXBA = pointB.x - pointA.x;\n    const distanceYBA = pointB.y - pointA.y;\n    const x = distanceXBA / (Math.sqrt(distanceXBA ** 2 + distanceYBA ** 2));\n    const y = distanceYBA / (Math.sqrt(distanceXBA ** 2 + distanceYBA ** 2));\n\n    return ((Math.atan2(x, y) * (180 / Math.PI)) + 360) % 360;\n  }\n\n  /**\n   * Build a new d3 link generator for a ComponentLink\n   * @param {ComponentLink} link - The link to build the generator for.\n   * @returns {Object} - A d3 link generator.\n   */\n  getLinkGenerator(link) {\n    const source = d3.select(`#${link.source}`);\n    const target = d3.select(`#${link.target}`);\n\n    const sourceAnchor = this.getAnchorPoint(source, target);\n    const targetAnchor = this.getAnchorPoint(target, source);\n\n    const sourceCenter = this.getSelectionCenter(source);\n    const targetCenter = this.getSelectionCenter(target);\n\n    const angle = this.getBearing(\n      this.screenToSVG(sourceCenter.x, sourceCenter.y, this.svg.select('.container').node()),\n      this.screenToSVG(targetCenter.x, targetCenter.y, this.svg.select('.container').node()),\n    );\n\n    let curve;\n\n    if (angle < 45 || angle >= 315 || (angle >= 135 && angle < 225)) {\n      curve = d3.curveBumpY;\n    } else {\n      curve = d3.curveBumpX;\n    }\n\n    return d3.link(curve)\n      .source(() => sourceAnchor)\n      .target(() => targetAnchor);\n  }\n\n  /**\n   * Compute the dimension of every component.\n   * @param {Array} lines - Rows of components.\n   */\n  setupTiles(lines) {\n    let previousTallestItem = { x1: 0, y1: 0 };\n\n    lines.forEach((line, lineIndex) => {\n      let prevItem = {\n        x1: 0,\n        y0: lineIndex * this.minHeight + this.padding,\n      };\n\n      line.items.forEach((item) => {\n        if (item.data.drawOption) {\n          item.x0 = item.data.drawOption.x;\n          item.y0 = item.data.drawOption.y;\n        } else {\n          item.x0 = prevItem.x1 + this.padding;\n          item.y0 = previousTallestItem.y1 + this.padding;\n          prevItem = item;\n        }\n\n        if (!item.data.drawOption || item.data.drawOption.needsResizing) {\n          /*\n           item.depth and item.height are set by d3 and represent the position of the node in\n           the hierarchy:\n           - height: how many layers exist below this node;\n           - depth: how deep in the tree the node is\n           */\n          const horizontalCoefficient = Math.min(\n            item.value,\n            this.getLineLengthForDepth(item.depth),\n          );\n          const verticalCoefficient = Math.ceil(this.__getVerticalCoefficient(item));\n\n          item.x1 = item.x0 + (horizontalCoefficient * (this.minWidth + 2 * this.margin))\n            + (item.height * 2 * this.padding)\n            + (horizontalCoefficient - 1)\n            * (this.padding + 2 * this.margin);\n\n          item.y1 = item.y0\n            + (verticalCoefficient * this.minHeight)\n            + (item.height * this.padding)\n            + (verticalCoefficient - 1)\n            * (this.padding + this.margin);\n\n          if (item.data.drawOption) {\n            item.data.drawOption.needsResizing = false;\n            item.data.drawOption.width = item.x1 - item.x0;\n            item.data.drawOption.height = item.y1 - item.y0;\n          }\n        } else {\n          item.x1 = item.x0 + item.data.drawOption.width;\n          item.y1 = item.y0 + item.data.drawOption.height;\n        }\n      });\n      if (line.items.length > 0) {\n        const maxLineValue = Math.max(...line.items.map((item) => item.value));\n\n        previousTallestItem = line.items.find((item) => item.value === maxLineValue);\n      }\n    });\n  }\n\n  /**\n   * Build and fill the layout lines for a Node.\n   * @param {Node} data - The Node to build lines for.\n   * @return {[{total: number, items: Node[]}]} - A list of lines.\n   * @private\n   */\n  __buildLines({ children, depth }) {\n    const lines = [{ total: 0, items: [] }];\n    let activeLineIndex = 0;\n    let activeLine = lines[activeLineIndex];\n\n    children.forEach((child) => {\n      if (activeLine.items.length >= this.getLineLengthForDepth(depth)) {\n        lines.push({ total: 0, items: [] });\n        activeLineIndex += 1;\n      }\n      activeLine = lines[activeLineIndex];\n      activeLine.total += child.value;\n      activeLine.items.push(child);\n    });\n\n    return lines;\n  }\n\n  /**\n   * Set actions on viewport.\n   * @param {Object} element - D3 element related to the actions.\n   */\n  setViewPortAction(element) {\n    this.svg.on('click', () => {\n      this.__unselectComponent();\n      this.cancelLinkCreationInteraction();\n    });\n    const drawLinks = this.drawLinks.bind(this);\n\n    element.call(d3\n      .zoom()\n      .on('zoom', function zoomHandler(event) {\n        d3.select(this).select('.container').attr('transform', event.transform);\n        drawLinks();\n      }));\n  }\n\n  /**\n   * Action to unselect current element.\n   * If no element is selected, does nothing.\n   * @private\n   */\n  __unselectComponent() {\n    if (this.actions.selection.current) {\n      d3.select(`#${this.rootId} .selected`)\n        .classed('selected', false)\n        .style('outline', '');\n      this.actions.selection.current = null;\n      this.hideActionMenu();\n    }\n  }\n\n  /**\n   * Unselects current selected element and selects a new one.\n   * @param {Selection} targetSelection - Component or link to select.\n   * @private\n   */\n  __selectComponent(targetSelection) {\n    const currentComponent = targetSelection.datum().__class === 'Link'\n      ? targetSelection.datum()\n      : targetSelection.datum().data;\n    const sameElementClicked = this.actions.selection.current === currentComponent;\n\n    if (this.actions.linkCreation.creating) {\n      if (targetSelection.node().classList.contains('disabled')) {\n        return;\n      }\n\n      this.actions.linkCreation.target = currentComponent;\n      this.createLink();\n    } else {\n      this.__unselectComponent();\n\n      if (sameElementClicked) {\n        return;\n      }\n\n      targetSelection\n        .classed('selected', true)\n        .style('outline', this.actions.selection.style)\n        .style('outline-offset', this.actions.selection.offset);\n      this.actions.selection.current = currentComponent;\n\n      // TODO: replace by: if (this.events?.SelectEvent && (...)) {\n      if (this.events && this.events.SelectEvent && currentComponent.__class === 'Component') {\n        this.events.SelectEvent.next(currentComponent);\n      }\n\n      this.initializeActionMenu(targetSelection);\n    }\n  }\n\n  /**\n   * Create a link between the previously selected source and destination.\n   */\n  createLink() {\n    const { source, target } = this.actions.linkCreation;\n    const activeLinkType = this.pluginData.definitions.links\n      .find((definition) => definition.sourceRef === source.definition.type\n        && definition.targetRef === target.definition.type);\n\n    const newLink = new ComponentLink({\n      source: source.id,\n      target: target.id,\n      definition: activeLinkType,\n    });\n\n    this.actions.linkCreation.source.setLinkAttribute(newLink);\n\n    this.emitUpdateEvent();\n\n    this.cancelLinkCreationInteraction();\n\n    this.drawLinks();\n  }\n\n  /**\n   * Initialize the action menu for a given target.\n   * @param {Selection} targetSelection - D3 selection of the target object.\n   */\n  initializeActionMenu(targetSelection) {\n    const actionMenu = this.svg\n      .select('.container')\n      .append('svg')\n      .attr('id', 'action-menu');\n\n    const actions = this.getMenuActions(targetSelection);\n\n    const zoomTransform = d3.zoomTransform(this.svg.select('.container').node());\n\n    actionMenu\n      .append('rect')\n      .attr('fill', 'lightgrey')\n      .attr('width', this.actionMenuButtonSize * actions.length)\n      .attr('height', this.actionMenuButtonSize)\n      .attr('rx', 5);\n\n    const { bottom, width, left } = targetSelection.node().getBoundingClientRect();\n    const { x, y } = this.screenToSVG(\n      (left + (width / 2)) - ((this.actionMenuButtonSize * actions.length) / 2) * zoomTransform.k,\n      bottom + 20,\n      this.svg.select('.container').node(),\n    );\n\n    actionMenu\n      .attr('x', x)\n      .attr('y', y);\n\n    const buttons = actionMenu\n      .selectAll('svg')\n      .data(actions)\n      .join('svg')\n      .attr('id', (data) => data.id)\n      .attr('width', this.actionMenuButtonSize)\n      .attr('height', this.actionMenuButtonSize)\n      .attr('x', (_d, index) => (this.actionMenuButtonSize * index))\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr('cursor', 'pointer')\n      .on('click', (event, data) => {\n        event.stopPropagation();\n        const handler = data.handler.bind(this);\n\n        handler(event, data);\n      });\n\n    buttons\n      .append('rect')\n      .classed('bg-button', true)\n      .attr('fill', 'lightgrey')\n      .attr('rx', 5)\n      .style('width', this.actionMenuButtonSize)\n      .style('height', this.actionMenuButtonSize);\n\n    buttons\n      .on('mouseenter', function onHover() {\n        d3.select(this)\n          .select('.bg-button')\n          .attr('fill', 'grey');\n      })\n      .on('mouseleave', function onLeave() {\n        d3.select(this)\n          .select('.bg-button')\n          .attr('fill', 'lightgrey');\n      });\n\n    buttons\n      .append('g')\n      .attr('x', 0)\n      .attr('y', 0)\n      .html((d) => d.icon)\n      .select('svg')\n      .attr('width', '80%')\n      .attr('height', '80%')\n      .attr('x', '10%')\n      .attr('y', '10%');\n\n    actionMenu.selectAll('button')\n      .style('width', '30px')\n      .style('height', '30px')\n      .style('border', 'none');\n  }\n\n  /**\n   * Store new link source and apply disabled style to invalid target components.\n   */\n  startLinkCreationInteraction() {\n    if (this.actions.selection.current) {\n      const source = this.pluginData.getComponentById(this.actions.selection.current.id);\n      const allowedLinkTargets = source.definition.definedAttributes\n        .filter((a) => a.type === 'Link');\n      const forbiddenTypes = allowedLinkTargets\n        .map((linkTarget) => `:not(.${linkTarget.linkRef})`)\n        .join('');\n\n      this.actions.linkCreation.creating = true;\n      this.actions.linkCreation.source = source;\n\n      this.setDisabledStyle(`.component:not(#${source.id})${forbiddenTypes}`);\n    }\n  }\n\n  /**\n   * Get a list of actions to fill the menu for a given target.\n   * @param {Object} targetSelection - The target object.\n   * @type {Object}\n   * @property {String} id - Id of the action button.\n   * @property {String} icon - Icon to display in the action button\n   * @property {Function} handler - Function called on action click.\n   * @return {MenuActions[]} - The list of menu actions.\n   */\n  getMenuActions(targetSelection) {\n    if (targetSelection.classed('component')) {\n      return [\n        {\n          id: 'create-link',\n          icon: actionIcons.link,\n          handler() {\n            this.startLinkCreationInteraction();\n          },\n        },\n        {\n          id: 'remove-component',\n          icon: actionIcons.trash,\n          handler() {\n            this.pluginData.removeComponentById(this.actions.selection.current.id);\n            this.emitUpdateEvent();\n            this.draw(this.rootId);\n          },\n        },\n      ];\n    }\n\n    return [\n      {\n        id: 'remove-link',\n        icon: actionIcons.trash,\n        handler() {\n          this.pluginData.removeLink(this.actions.selection.current);\n          this.emitUpdateEvent();\n          this.draw(this.rootId);\n        },\n      },\n    ];\n  }\n\n  /**\n   * Handle link creation being cancelled.\n   */\n  cancelLinkCreationInteraction() {\n    this.actions.linkCreation.creating = false;\n    this.actions.linkCreation.source = null;\n    this.actions.linkCreation.target = null;\n    this.unsetAllDisabledStyles();\n  }\n\n  /**\n   * Hide the action menu.\n   */\n  hideActionMenu() {\n    d3.select('#action-menu')\n      .remove();\n  }\n}\nexport default DefaultDrawer;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/draw/DefaultDrawer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "class",
    "name": "DefaultDrawer",
    "memberof": "src/draw/DefaultDrawer.js",
    "static": true,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/draw/DefaultDrawer.js",
    "importStyle": "DefaultDrawer",
    "description": "Class that draws a component in a graphical representation.",
    "lineNumber": 11,
    "interface": true
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#constructor",
    "access": "public",
    "description": "Default constructor",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "DefaultData"
        ],
        "spread": false,
        "optional": false,
        "name": "pluginData",
        "description": "Plugin data storage."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "resources",
        "description": "Object that contains resources."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "events",
        "description": "Events list."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "events.SelectEvent.next",
        "description": "Function to emit selection event."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "events.UpdateEvent.next",
        "description": "Function to emit update event."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"root\"",
        "defaultRaw": "root",
        "name": "rootId",
        "description": "Id of HTML element where we want to draw."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": "Rendering options."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1280",
        "defaultRaw": 1280,
        "name": "options.width",
        "description": "Render svg viewbox width."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1280",
        "defaultRaw": 1280,
        "name": "options.height",
        "description": "Render svg viewbox height."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "230",
        "defaultRaw": 230,
        "name": "options.minWidth",
        "description": "Minimum width of a component."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "options.minHeight",
        "description": "Minimum height of a component."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "30",
        "defaultRaw": 30,
        "name": "options.padding",
        "description": "Padding around a component."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "6",
        "defaultRaw": 6,
        "name": "options.margin",
        "description": "Component margin thickness."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[5,1]",
        "defaultRaw": [
          5,
          1
        ],
        "name": "options.lineLengthPerDepth",
        "description": "Number of components\nper line at a given depth. Valid values: 1 - Infinity."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.actionMenuButtonSize",
        "description": "The size of each action menu button."
      }
    ]
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "pluginData",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#pluginData",
    "access": "public",
    "description": "Plugin data storage.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "DefaultData"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "rootId",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#rootId",
    "access": "public",
    "description": "Id of HTML element where we want to draw.",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "resources",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#resources",
    "access": "public",
    "description": "Object that contains resources.",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "width",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#width",
    "access": "public",
    "description": "Render svg viewbox width.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "height",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#height",
    "access": "public",
    "description": "Render svg viewbox height.",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "minWidth",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#minWidth",
    "access": "public",
    "description": "Minimum width of a component.",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "minHeight",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#minHeight",
    "access": "public",
    "description": "Minimum height of a component.",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "padding",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#padding",
    "access": "public",
    "description": "Padding around components.",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "margin",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#margin",
    "access": "public",
    "description": "Component margin thickness.",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "lineLengthPerDepth",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#lineLengthPerDepth",
    "access": "public",
    "description": "Number of components per line at a given depth. Valid values: 1 - Infinity.",
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "actionMenuButtonSize",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#actionMenuButtonSize",
    "access": "public",
    "description": "The size of each action menu button.",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "actions",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#actions",
    "access": "public",
    "description": "Store for actions, used to set specific actions values when making actions.",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "screenToSVG",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#screenToSVG",
    "access": "public",
    "description": "Convert screen coordinates into a given svg referential.",
    "lineNumber": 125,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "screenX",
        "description": "Screen x coordinate."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "screenY",
        "description": "Screen y coordinate."
      },
      {
        "nullable": null,
        "types": [
          "SVGSVGElement"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "svg",
        "description": "SVG referential."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DOMPoint"
      ],
      "spread": false,
      "description": "The transformed coordinates."
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "SVGToScreen",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#SVGToScreen",
    "access": "public",
    "description": "Convert svg coordinates into screen coordinates.",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "svgX",
        "description": "SVG x coordinate."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "svgY",
        "description": "SVG y coordinate."
      },
      {
        "nullable": null,
        "types": [
          "SVGSVGElement"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "svg",
        "description": "SVG referential."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DOMPoint"
      ],
      "spread": false,
      "description": "The transformed coordinates."
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "setEvents",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#setEvents",
    "access": "public",
    "description": "Set events.",
    "lineNumber": 151,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "events.SelectEvent.next",
        "description": "Function to emit selection event."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "events.UpdateEvent.next",
        "description": "Function to emit update event."
      }
    ],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "events",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#events",
    "access": "public",
    "description": null,
    "lineNumber": 155,
    "undocument": true,
    "type": {
      "types": [
        "{\"SelectEvent\": *, \"UpdateEvent\": *}"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "emitUpdateEvent",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#emitUpdateEvent",
    "access": "public",
    "description": "Emit UpdateEvent if defined.",
    "lineNumber": 164,
    "params": [],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "__getVerticalCoefficient",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#__getVerticalCoefficient",
    "access": "private",
    "description": "Compute a coefficient representing how tall a component will be based on its children's layout.",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": "The component to check."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The coefficient."
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "getLineLengthForDepth",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#getLineLengthForDepth",
    "access": "public",
    "description": "Get the maximum line length for a given depth.",
    "lineNumber": 222,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "depth",
        "description": "The depth to check."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The maximum length at that depth."
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "setDisabledStyle",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#setDisabledStyle",
    "access": "public",
    "description": "Apply the disabled style to all elements matching the selector.",
    "lineNumber": 230,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'.component'",
        "defaultRaw": "'.component'",
        "name": "selector",
        "description": "CSS selector string."
      }
    ],
    "return": null
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "unsetAllDisabledStyles",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#unsetAllDisabledStyles",
    "access": "public",
    "description": "Remove the disabled style from previously disabled components.",
    "lineNumber": 240,
    "params": [],
    "return": null
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "dragHandler",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#dragHandler",
    "access": "public",
    "description": "Handles dragging a component across the screen and return the element it will be dropped on.",
    "lineNumber": 251,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "draggedElement",
        "description": "The DOM element being dragged."
      },
      {
        "nullable": null,
        "types": [
          "DragEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The emitted drag event."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "The element to drop the dragged element onto."
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "setupDragBehavior",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#setupDragBehavior",
    "access": "public",
    "description": "Create and return d3 drag behaviour.",
    "lineNumber": 298,
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "D3 drag behaviour."
    },
    "params": []
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "__markAsNeedingResize",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#__markAsNeedingResize",
    "access": "private",
    "description": "Starting from a given node, recursively mark all parent nodes as needing a resize.",
    "lineNumber": 330,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The node to start from."
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "handleDropEvent",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#handleDropEvent",
    "access": "public",
    "description": "Update component hierarchy and re-render.",
    "lineNumber": 344,
    "params": [
      {
        "nullable": null,
        "types": [
          "DragEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "D3's drag event."
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "dropTarget",
        "description": "The element on which the dragged component was dropped."
      }
    ],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "createRenderingContext",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#createRenderingContext",
    "access": "public",
    "description": "Create a new svg to render the models in, or fetch an existing one.",
    "lineNumber": 383,
    "params": [],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "svg",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#svg",
    "access": "public",
    "description": null,
    "lineNumber": 387,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "draw",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#draw",
    "access": "public",
    "description": "Draws all Components and ComponentLinks in the parentId Element.",
    "lineNumber": 408,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "rootId",
        "description": "Id of the container where you want to draw."
      }
    ],
    "return": null
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "clickHandler",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#clickHandler",
    "access": "public",
    "description": "Handle component click event. Set selected style on it.",
    "lineNumber": 425,
    "params": [
      {
        "nullable": null,
        "types": [
          "PointerEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The click event."
      }
    ],
    "return": null
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "drawComponents",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#drawComponents",
    "access": "public",
    "description": "Render components in model view.",
    "lineNumber": 433,
    "params": [],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "shadowRoot",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#shadowRoot",
    "access": "public",
    "description": null,
    "lineNumber": 434,
    "undocument": true,
    "type": {
      "types": [
        "{\"children\": *, \"id\": string, \"name\": *}"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "buildTree",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#buildTree",
    "access": "public",
    "description": "Build d3 hierarchy and treemap layout.",
    "lineNumber": 497,
    "return": {
      "nullable": null,
      "types": [
        "[String, Node[]][]"
      ],
      "spread": false,
      "description": "The nodes grouped by parent."
    },
    "params": []
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "getAnchorPoint",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#getAnchorPoint",
    "access": "public",
    "description": "Get the most appropriate anchor point for a link towards the given target.",
    "lineNumber": 541,
    "params": [
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": false,
        "name": "sourceSelection",
        "description": "The source D3 selection object."
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": false,
        "name": "targetSelection",
        "description": "The target D3 selection object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number[]",
        "null"
      ],
      "spread": false,
      "description": "Tuple representing x,y coordinates,\nnull if lacking source and/or target. Format required by d3."
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "drawLinks",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#drawLinks",
    "access": "public",
    "description": "Render links in model view.",
    "lineNumber": 591,
    "params": [],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "getSelectionCenter",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#getSelectionCenter",
    "access": "public",
    "description": "Get the coordinates for a given selection's center.",
    "lineNumber": 625,
    "params": [
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": false,
        "name": "selection",
        "description": "The selection to find the center for."
      }
    ],
    "return": {
      "types": [
        "{\"x\": *, \"y\": *}"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "getBearing",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#getBearing",
    "access": "public",
    "description": "Get the angle (in degrees) between two points.\n0 = pointB is directly below.\n180 = pointB is directly above.",
    "lineNumber": 642,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pointA",
        "description": "The point to get the bearing from."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pointB",
        "description": "The point to get the bearing to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The bearing."
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "getLinkGenerator",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#getLinkGenerator",
    "access": "public",
    "description": "Build a new d3 link generator for a ComponentLink",
    "lineNumber": 656,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} - A d3 link generator."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ComponentLink"
        ],
        "spread": false,
        "optional": false,
        "name": "link",
        "description": "The link to build the generator for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "A d3 link generator."
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "setupTiles",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#setupTiles",
    "access": "public",
    "description": "Compute the dimension of every component.",
    "lineNumber": 688,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "lines",
        "description": "Rows of components."
      }
    ],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "__buildLines",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#__buildLines",
    "access": "private",
    "description": "Build and fill the layout lines for a Node.",
    "lineNumber": 755,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The Node to build lines for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[{total: number, items: Node[]}]"
      ],
      "spread": false,
      "description": "A list of lines."
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "setViewPortAction",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#setViewPortAction",
    "access": "public",
    "description": "Set actions on viewport.",
    "lineNumber": 777,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "D3 element related to the actions."
      }
    ],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "__unselectComponent",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#__unselectComponent",
    "access": "private",
    "description": "Action to unselect current element.\nIf no element is selected, does nothing.",
    "lineNumber": 797,
    "params": [],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "__selectComponent",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#__selectComponent",
    "access": "private",
    "description": "Unselects current selected element and selects a new one.",
    "lineNumber": 812,
    "params": [
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": false,
        "name": "targetSelection",
        "description": "Component or link to select."
      }
    ],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "createLink",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#createLink",
    "access": "public",
    "description": "Create a link between the previously selected source and destination.",
    "lineNumber": 850,
    "params": [],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "initializeActionMenu",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#initializeActionMenu",
    "access": "public",
    "description": "Initialize the action menu for a given target.",
    "lineNumber": 875,
    "params": [
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": false,
        "name": "targetSelection",
        "description": "D3 selection of the target object."
      }
    ],
    "return": null
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "startLinkCreationInteraction",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#startLinkCreationInteraction",
    "access": "public",
    "description": "Store new link source and apply disabled style to invalid target components.",
    "lineNumber": 960,
    "params": [],
    "return": null
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "getMenuActions",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#getMenuActions",
    "access": "public",
    "description": "Get a list of actions to fill the menu for a given target.",
    "lineNumber": 985,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "targetSelection",
        "description": "The target object."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Id of the action button."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "icon",
        "description": "Icon to display in the action button"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Function called on action click."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MenuActions[]"
      ],
      "spread": false,
      "description": "The list of menu actions."
    },
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "cancelLinkCreationInteraction",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#cancelLinkCreationInteraction",
    "access": "public",
    "description": "Handle link creation being cancelled.",
    "lineNumber": 1023,
    "params": [],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "hideActionMenu",
    "memberof": "src/draw/DefaultDrawer.js~DefaultDrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/draw/DefaultDrawer.js~DefaultDrawer#hideActionMenu",
    "access": "public",
    "description": "Hide the action menu.",
    "lineNumber": 1033,
    "params": [],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "src/error/ParseError.js",
    "content": "/**\n * Class that represents a parsing error. Used by the DefaultParser as default Error.\n * @extends {Error}\n */\n\nclass ParseError extends Error {\n  /**\n   * Default constructor.\n   *\n   * @param {String} [message=\"Error happened when trying to parse.\"] - Message of the error.\n   * @param {Number} [startLine=0] - Start Line of the error.\n   * @param {Number} [startColumn=0] - Start Column of the error.\n   * @param {Number} [endLine=0] - End Line of the error.\n   * @param {Number} [endColumn=0] - End Column of the error.\n   * @param {String} [severity=\"Error\"] - Severity of the error: 'Warning' or 'Error'.\n   */\n  constructor(\n    message = 'Error happened when trying to parse.',\n    startLine = 0,\n    startColumn = 0,\n    endLine = 0,\n    endColumn = 0,\n    severity = 'Error',\n  ) {\n    super(message);\n    /**\n     * Name of the error.\n     * @type {String}\n     */\n    this.name = 'ParseError';\n    /**\n     * Start Line of the error.\n     * @type {Number}\n     */\n    this.startLine = startLine;\n    /**\n     * Start Column of the error.\n     * @type {Number}\n     */\n    this.startColumn = startColumn;\n    /**\n     * End Line of the error.\n     * @type {Number}\n     */\n    this.endLine = endLine;\n    /**\n     * End Column of the error.\n     * @type {Number}\n     */\n    this.endColumn = endColumn;\n    /**\n     * Severity of the error: 'Warning' or 'Error'.\n     * @type {String}\n     */\n    this.severity = severity;\n  }\n}\n\nexport default ParseError;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/error/ParseError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "class",
    "name": "ParseError",
    "memberof": "src/error/ParseError.js",
    "static": true,
    "longname": "src/error/ParseError.js~ParseError",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/error/ParseError.js",
    "importStyle": "ParseError",
    "description": "Class that represents a parsing error. Used by the DefaultParser as default Error.",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 105,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/error/ParseError.js~ParseError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/error/ParseError.js~ParseError#constructor",
    "access": "public",
    "description": "Default constructor.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"Error happened when trying to parse.\"",
        "defaultRaw": "Error happened when trying to parse.",
        "name": "message",
        "description": "Message of the error."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startLine",
        "description": "Start Line of the error."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "startColumn",
        "description": "Start Column of the error."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "endLine",
        "description": "End Line of the error."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "endColumn",
        "description": "End Column of the error."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"Error\"",
        "defaultRaw": "Error",
        "name": "severity",
        "description": "Severity of the error: 'Warning' or 'Error'."
      }
    ]
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "name",
    "memberof": "src/error/ParseError.js~ParseError",
    "static": false,
    "longname": "src/error/ParseError.js~ParseError#name",
    "access": "public",
    "description": "Name of the error.",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 107,
    "kind": "member",
    "name": "startLine",
    "memberof": "src/error/ParseError.js~ParseError",
    "static": false,
    "longname": "src/error/ParseError.js~ParseError#startLine",
    "access": "public",
    "description": "Start Line of the error.",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 108,
    "kind": "member",
    "name": "startColumn",
    "memberof": "src/error/ParseError.js~ParseError",
    "static": false,
    "longname": "src/error/ParseError.js~ParseError#startColumn",
    "access": "public",
    "description": "Start Column of the error.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "endLine",
    "memberof": "src/error/ParseError.js~ParseError",
    "static": false,
    "longname": "src/error/ParseError.js~ParseError#endLine",
    "access": "public",
    "description": "End Line of the error.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "endColumn",
    "memberof": "src/error/ParseError.js~ParseError",
    "static": false,
    "longname": "src/error/ParseError.js~ParseError#endColumn",
    "access": "public",
    "description": "End Column of the error.",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "severity",
    "memberof": "src/error/ParseError.js~ParseError",
    "static": false,
    "longname": "src/error/ParseError.js~ParseError#severity",
    "access": "public",
    "description": "Severity of the error: 'Warning' or 'Error'.",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/index.js",
    "content": "import Component from './models/Component';\nimport ComponentDefinition from './models/ComponentDefinition';\nimport ComponentAttributeDefinition from './models/ComponentAttributeDefinition';\nimport ComponentDrawOption from './models/ComponentDrawOption';\nimport ComponentAttribute from './models/ComponentAttribute';\nimport ComponentLink from './models/ComponentLink';\nimport ComponentLinkDefinition from './models/ComponentLinkDefinition';\nimport FileInformation from './models/FileInformation';\nimport FileInput from './models/FileInput';\nimport DefaultDrawer from './draw/DefaultDrawer';\nimport DefaultMetadata from './metadata/DefaultMetadata';\nimport DefaultParser from './parser/DefaultParser';\nimport DefaultRender from './render/DefaultRender';\nimport ParseError from './error/ParseError';\nimport DefaultData from './models/DefaultData';\nimport DefaultPlugin from './models/DefaultPlugin';\n\nexport {\n  Component,\n  ComponentDefinition,\n  ComponentAttributeDefinition,\n  ComponentDrawOption,\n  ComponentAttribute,\n  ComponentLink,\n  ComponentLinkDefinition,\n  DefaultDrawer,\n  DefaultMetadata,\n  DefaultParser,\n  DefaultRender,\n  ParseError,\n  FileInformation,\n  FileInput,\n  DefaultData,\n  DefaultPlugin,\n};\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "file",
    "name": "src/metadata/DefaultMetadata.js",
    "content": "/**\n * Class that represent the metadata of a specific implementation.\n * @interface\n */\nclass DefaultMetadata {\n  /**\n   * Default constructor.\n   * @param {DefaultData} pluginData - Plugin data storage.\n   */\n  constructor(pluginData) {\n    /**\n     * Plugin data storage.\n     * @type {DefaultData}\n     */\n    this.pluginData = pluginData || null;\n  }\n\n  /**\n   * Validate the provided metadata with a schemas.\n   * @return {Boolean} - True if metadata is valid.\n   */\n  validate() {\n    return true;\n  }\n\n  /**\n   * Parse all component/link definitions from metadata.\n   */\n  parse() {\n    this.pluginData.definitions = {\n      components: [],\n      links: [],\n    };\n  }\n}\n\nexport default DefaultMetadata;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/metadata/DefaultMetadata.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 114,
    "kind": "class",
    "name": "DefaultMetadata",
    "memberof": "src/metadata/DefaultMetadata.js",
    "static": true,
    "longname": "src/metadata/DefaultMetadata.js~DefaultMetadata",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/metadata/DefaultMetadata.js",
    "importStyle": "DefaultMetadata",
    "description": "Class that represent the metadata of a specific implementation.",
    "lineNumber": 5,
    "interface": true
  },
  {
    "__docId__": 115,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/metadata/DefaultMetadata.js~DefaultMetadata",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/metadata/DefaultMetadata.js~DefaultMetadata#constructor",
    "access": "public",
    "description": "Default constructor.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "DefaultData"
        ],
        "spread": false,
        "optional": false,
        "name": "pluginData",
        "description": "Plugin data storage."
      }
    ]
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "pluginData",
    "memberof": "src/metadata/DefaultMetadata.js~DefaultMetadata",
    "static": false,
    "longname": "src/metadata/DefaultMetadata.js~DefaultMetadata#pluginData",
    "access": "public",
    "description": "Plugin data storage.",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "DefaultData"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "validate",
    "memberof": "src/metadata/DefaultMetadata.js~DefaultMetadata",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/metadata/DefaultMetadata.js~DefaultMetadata#validate",
    "access": "public",
    "description": "Validate the provided metadata with a schemas.",
    "lineNumber": 22,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "True if metadata is valid."
    },
    "params": []
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "parse",
    "memberof": "src/metadata/DefaultMetadata.js~DefaultMetadata",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/metadata/DefaultMetadata.js~DefaultMetadata#parse",
    "access": "public",
    "description": "Parse all component/link definitions from metadata.",
    "lineNumber": 29,
    "params": [],
    "return": null
  },
  {
    "__docId__": 119,
    "kind": "file",
    "name": "src/models/Component.js",
    "content": "import ComponentAttribute from './ComponentAttribute';\nimport FileInformation from './FileInformation';\n\n/**\n * A model for modelling tools in Leto Modelizer.\n * @extends {FileInformation}\n */\nclass Component extends FileInformation {\n  /**\n   * Default constructor.\n   *\n   * @param {String} [props.id] - The id of this Component.\n   * @param {String} [props.name] - The name of this Component.\n   * @param {ComponentDefinition} [props.definition] - The Definition used to instantiate this\n   * Component.\n   * @param {ComponentDrawOption} [props.drawOption] - The options used to draw this Component.\n   * @param {ComponentAttribute[]} [props.attributes=[]] - Attributes of Component.\n   */\n  constructor(props = {\n    id: null,\n    name: null,\n    definition: null,\n    drawOption: null,\n    attributes: [],\n  }) {\n    super(props);\n    const {\n      id,\n      name,\n      definition,\n      drawOption,\n      attributes,\n    } = props;\n\n    /**\n     * Use for drawer to get the type of object.\n     * @type {String}\n     * @private\n     */\n    this.__class = 'Component';\n    /**\n     * The id of this Component.\n     * @type {String}\n     */\n    this.id = id || null;\n    /**\n     * The name of this Component.\n     * @type {String}\n     */\n    this.name = name || null;\n    /**\n     * The Definition used to instantiate this Component.\n     * @type {ComponentDefinition}\n     */\n    this.definition = definition || null;\n    /**\n     * The options used to draw this Component.\n     * @type {ComponentDrawOption}\n     */\n    this.drawOption = drawOption || null;\n    /**\n     * Attributes of Component.\n     * @type {ComponentAttribute[]}\n     */\n    this.attributes = attributes || [];\n  }\n\n  /**\n   * Set container value in attributes.\n   * @param {Component} container - Container.\n   */\n  setReferenceAttribute(container) {\n    const attributeDefinition = this.definition.definedAttributes\n      .find((definition) => definition.containerRef.includes(\n        container.definition.type,\n      ));\n\n    if (!attributeDefinition) {\n      return;\n    }\n\n    const attributes = this.attributes\n      .filter(({ definition }) => definition.name === attributeDefinition.name);\n\n    if (attributes.length > 0) {\n      attributes.forEach((attribute) => {\n        attribute.value = container.id;\n      });\n    } else {\n      this.attributes.push(new ComponentAttribute({\n        name: attributeDefinition.name,\n        value: container.id,\n        type: 'String',\n        definition: attributeDefinition,\n      }));\n    }\n  }\n\n  /**\n   * Remove all reference attributes, corresponding to the container if existing.\n   * @param {Component} container - Container.\n   */\n  removeAllReferenceAttributes(container) {\n    if (container) {\n      this.attributes = this.attributes\n        .filter(({ definition, value }) => !(definition.type === 'Reference'\n        && definition.containerRef === container.definition.type\n        && value === container.id));\n    } else {\n      this.attributes = this.attributes.filter(({ definition }) => definition.type !== 'Reference');\n    }\n  }\n\n  /**\n   * Set the attribute of a given link\n   * @param {ComponentLink} link - The link we want to set the attribute.\n   */\n  setLinkAttribute(link) {\n    const attributeDefinition = this.definition.definedAttributes\n      .find(({ name }) => name === link.definition.attributeRef);\n    const attribute = this.attributes.find(({ definition }) => definition.type === 'Link'\n      && attributeDefinition.name === definition.name);\n\n    if (attribute && !attribute.value.includes(link.target)) {\n      attribute.value.push(link.target);\n    } else if (!attribute) {\n      this.attributes.push(new ComponentAttribute({\n        name: attributeDefinition.name,\n        definition: attributeDefinition,\n        type: 'Array',\n        value: [link.target],\n      }));\n    }\n  }\n\n  /**\n   * Remove id in link attribute corresponding to the given name if provided\n   * otherwise remove id in all link attributes' value.\n   * Then if value is empty remove attribute.\n   * @param {String} id - Id to remove.\n   * @param {String} [name=null] - Name of attribute to remove.\n   */\n  removeLinkAttribute(id, name = null) {\n    this.attributes = this.attributes\n      .filter((attribute) => {\n        if (name && attribute.name !== name) {\n          return true;\n        }\n        if (attribute.definition && attribute.definition.type === 'Link') {\n          const index = attribute.value.findIndex((value) => value === id);\n\n          if (index >= 0) {\n            attribute.value.splice(index, 1);\n          }\n\n          return attribute.value.length !== 0;\n        }\n\n        return true;\n      });\n  }\n\n  /**\n   * Get attribute corresponding to the given name.\n   * @param {String} name - Name of attribute to find.\n   * @return {ComponentAttribute|null} Component attribute or null.\n   */\n  getAttributeByName(name) {\n    return this.__getAttributeByName(this.attributes, name);\n  }\n\n  /**\n   * Get attribute from attributes list corresponding to the given name.\n   * Search in sub-attributes of \"Object\" attributes also.\n   * @param {ComponentAttribute[]} attributes - Attributes list.\n   * @param {String} name - Name of attribute to find.\n   * @return {ComponentAttribute|null} Component attribute or null.\n   * @private\n   */\n  __getAttributeByName(attributes, name) {\n    for (let index = 0; index < attributes.length; index += 1) { // NOSONAR\n      if (attributes[index].name === name) {\n        return attributes[index];\n      }\n      if (attributes[index].type === 'Object') {\n        const attribute = this.__getAttributeByName(attributes[index].value, name);\n\n        if (attribute) {\n          return attribute;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Retrieve container id from attributes.\n   * @return {String} Id of container or null;\n   */\n  getContainerId() {\n    const attribute = this.attributes.find(({ definition }) => definition\n      && definition.type === 'Reference');\n\n    return !attribute ? null : attribute.value;\n  }\n}\n\nexport default Component;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/models/Component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "class",
    "name": "Component",
    "memberof": "src/models/Component.js",
    "static": true,
    "longname": "src/models/Component.js~Component",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/models/Component.js",
    "importStyle": "Component",
    "description": "A model for modelling tools in Leto Modelizer.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "FileInformation"
    ]
  },
  {
    "__docId__": 121,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/models/Component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/Component.js~Component#constructor",
    "access": "public",
    "description": "Default constructor.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.id",
        "description": "The id of this Component."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.name",
        "description": "The name of this Component."
      },
      {
        "nullable": null,
        "types": [
          "ComponentDefinition"
        ],
        "spread": false,
        "optional": true,
        "name": "props.definition",
        "description": "The Definition used to instantiate this\nComponent."
      },
      {
        "nullable": null,
        "types": [
          "ComponentDrawOption"
        ],
        "spread": false,
        "optional": true,
        "name": "props.drawOption",
        "description": "The options used to draw this Component."
      },
      {
        "nullable": null,
        "types": [
          "ComponentAttribute[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "props.attributes",
        "description": "Attributes of Component."
      }
    ]
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "__class",
    "memberof": "src/models/Component.js~Component",
    "static": false,
    "longname": "src/models/Component.js~Component#__class",
    "access": "private",
    "description": "Use for drawer to get the type of object.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 123,
    "kind": "member",
    "name": "id",
    "memberof": "src/models/Component.js~Component",
    "static": false,
    "longname": "src/models/Component.js~Component#id",
    "access": "public",
    "description": "The id of this Component.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "name",
    "memberof": "src/models/Component.js~Component",
    "static": false,
    "longname": "src/models/Component.js~Component#name",
    "access": "public",
    "description": "The name of this Component.",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "definition",
    "memberof": "src/models/Component.js~Component",
    "static": false,
    "longname": "src/models/Component.js~Component#definition",
    "access": "public",
    "description": "The Definition used to instantiate this Component.",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "ComponentDefinition"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "drawOption",
    "memberof": "src/models/Component.js~Component",
    "static": false,
    "longname": "src/models/Component.js~Component#drawOption",
    "access": "public",
    "description": "The options used to draw this Component.",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "ComponentDrawOption"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "attributes",
    "memberof": "src/models/Component.js~Component",
    "static": false,
    "longname": "src/models/Component.js~Component#attributes",
    "access": "public",
    "description": "Attributes of Component.",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "ComponentAttribute[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "setReferenceAttribute",
    "memberof": "src/models/Component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/Component.js~Component#setReferenceAttribute",
    "access": "public",
    "description": "Set container value in attributes.",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "container",
        "description": "Container."
      }
    ],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "removeAllReferenceAttributes",
    "memberof": "src/models/Component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/Component.js~Component#removeAllReferenceAttributes",
    "access": "public",
    "description": "Remove all reference attributes, corresponding to the container if existing.",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "container",
        "description": "Container."
      }
    ],
    "return": null
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "setLinkAttribute",
    "memberof": "src/models/Component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/Component.js~Component#setLinkAttribute",
    "access": "public",
    "description": "Set the attribute of a given link",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "ComponentLink"
        ],
        "spread": false,
        "optional": false,
        "name": "link",
        "description": "The link we want to set the attribute."
      }
    ],
    "return": null
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "removeLinkAttribute",
    "memberof": "src/models/Component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/Component.js~Component#removeLinkAttribute",
    "access": "public",
    "description": "Remove id in link attribute corresponding to the given name if provided\notherwise remove id in all link attributes' value.\nThen if value is empty remove attribute.",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Id to remove."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "name",
        "description": "Name of attribute to remove."
      }
    ],
    "return": null
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "getAttributeByName",
    "memberof": "src/models/Component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/Component.js~Component#getAttributeByName",
    "access": "public",
    "description": "Get attribute corresponding to the given name.",
    "lineNumber": 168,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of attribute to find."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ComponentAttribute",
        "null"
      ],
      "spread": false,
      "description": "Component attribute or null."
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "__getAttributeByName",
    "memberof": "src/models/Component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/Component.js~Component#__getAttributeByName",
    "access": "private",
    "description": "Get attribute from attributes list corresponding to the given name.\nSearch in sub-attributes of \"Object\" attributes also.",
    "lineNumber": 180,
    "params": [
      {
        "nullable": null,
        "types": [
          "ComponentAttribute[]"
        ],
        "spread": false,
        "optional": false,
        "name": "attributes",
        "description": "Attributes list."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of attribute to find."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ComponentAttribute",
        "null"
      ],
      "spread": false,
      "description": "Component attribute or null."
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "getContainerId",
    "memberof": "src/models/Component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/Component.js~Component#getContainerId",
    "access": "public",
    "description": "Retrieve container id from attributes.",
    "lineNumber": 201,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Id of container or null;"
    },
    "params": []
  },
  {
    "__docId__": 138,
    "kind": "file",
    "name": "src/models/ComponentAttribute.js",
    "content": "/**\n * Class to add Attribute in Components\n */\nclass ComponentAttribute {\n  /**\n   * Default constructor.\n   *\n   * @param {String} [props.name=null] - The name of the attribute.\n   * @param {(String|Boolean|Number|Array|ComponentAttribute[])} [props.value=null] - The value of\n   * the attribute.\n   * @param {String} [props.type=null] - The reel type of the attribute.\n   * @param {ComponentAttributeDefinition} [props.definition=null] - The definition of the\n   * attribute.\n   */\n  constructor(props = {\n    name: null,\n    value: null,\n    type: null,\n    definition: null,\n  }) {\n    const {\n      name,\n      value,\n      type,\n      definition,\n    } = props;\n\n    /**\n     * The name of the attribute.\n     * @type {String}\n     */\n    this.name = name || null;\n    /**\n     * The value of the attribute.\n     * @type {(String|Boolean|Number|Array|ComponentAttribute[])}\n     */\n    this.value = value || null;\n    /**\n     * The type of the attribute, reel type of the attribute, to check if it's match with the\n     * ComponentAttributeDefinition.\n     * @type {String}\n     */\n    this.type = type || null;\n    /**\n     * The definition of the attribute.\n     * @type {ComponentAttributeDefinition}\n     */\n    this.definition = definition || null;\n  }\n}\n\nexport default ComponentAttribute;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/models/ComponentAttribute.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 139,
    "kind": "class",
    "name": "ComponentAttribute",
    "memberof": "src/models/ComponentAttribute.js",
    "static": true,
    "longname": "src/models/ComponentAttribute.js~ComponentAttribute",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/models/ComponentAttribute.js",
    "importStyle": "ComponentAttribute",
    "description": "Class to add Attribute in Components",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 140,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/models/ComponentAttribute.js~ComponentAttribute",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/ComponentAttribute.js~ComponentAttribute#constructor",
    "access": "public",
    "description": "Default constructor.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "props.name",
        "description": "The name of the attribute."
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Boolean",
          "Number",
          "Array",
          "ComponentAttribute[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "props.value",
        "description": "The value of\nthe attribute."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "props.type",
        "description": "The reel type of the attribute."
      },
      {
        "nullable": null,
        "types": [
          "ComponentAttributeDefinition"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "props.definition",
        "description": "The definition of the\nattribute."
      }
    ]
  },
  {
    "__docId__": 141,
    "kind": "member",
    "name": "name",
    "memberof": "src/models/ComponentAttribute.js~ComponentAttribute",
    "static": false,
    "longname": "src/models/ComponentAttribute.js~ComponentAttribute#name",
    "access": "public",
    "description": "The name of the attribute.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "value",
    "memberof": "src/models/ComponentAttribute.js~ComponentAttribute",
    "static": false,
    "longname": "src/models/ComponentAttribute.js~ComponentAttribute#value",
    "access": "public",
    "description": "The value of the attribute.",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "String",
        "Boolean",
        "Number",
        "Array",
        "ComponentAttribute[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "type",
    "memberof": "src/models/ComponentAttribute.js~ComponentAttribute",
    "static": false,
    "longname": "src/models/ComponentAttribute.js~ComponentAttribute#type",
    "access": "public",
    "description": "The type of the attribute, reel type of the attribute, to check if it's match with the\nComponentAttributeDefinition.",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "definition",
    "memberof": "src/models/ComponentAttribute.js~ComponentAttribute",
    "static": false,
    "longname": "src/models/ComponentAttribute.js~ComponentAttribute#definition",
    "access": "public",
    "description": "The definition of the attribute.",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "ComponentAttributeDefinition"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 145,
    "kind": "file",
    "name": "src/models/ComponentAttributeDefinition.js",
    "content": "/**\n * Define Attributes for type.\n */\nclass ComponentAttributeDefinition {\n  /**\n   * Default constructor\n   *\n   * @param {String} [props.name] - Attribute name.\n   * @param {String} [props.type] - Attribute type,\n   * valid types are String/Boolean/Number/Array/Object/Link/Reference.\n   * @param {String} [props.linkType] - Type of link, valid types are Default/Reverse.\n   * @param {String[]} [props.linkRef=[]] - Reference of accepted component for link.\n   * @param {String} [props.linkColor='black'] - Color of the link.\n   * @param {Number} [props.linkWidth=2] - Width of the link.\n   * @param {Number[]} [props.linkDashStyle] - Dash style of the link. See stroke-dasharray of svg.\n   * @param {String[]} [props.containerRef=[]] - Reference of accepted component for container.\n   * @param {Boolean} [props.required=false] - Attribute is required.\n   * @param {ComponentAttributeDefinition[]} [props.definedAttributes=[]] - Defined attributes for\n   * this type.\n   * @param {Object} [props.rules={}] - Rules of this type of Attribute.\n   * @param {Array} [props.rules.values] - Default values of attribute.\n   * @param {Number} [props.rules.min] - Minimum value of Attribute.\n   * @param {Number} [props.rules.max] - Maximum value of Attribute.\n   * @param {String} [props.rules.regex] - Regular expression to constrain the format of the value.\n   */\n  constructor(props = {\n    name: null,\n    type: null,\n    linkType: null,\n    linkRef: [],\n    linkColor: 'black',\n    linkWidth: 2,\n    linkDashStyle: null,\n    containerRef: [],\n    required: false,\n    definedAttributes: [],\n    rules: {\n      values: null,\n      min: null,\n      max: null,\n      regex: null,\n    },\n  }) {\n    const {\n      name,\n      type,\n      linkType,\n      linkRef,\n      linkColor,\n      linkWidth,\n      linkDashStyle,\n      containerRef,\n      definedAttributes,\n      required,\n      rules,\n    } = props;\n\n    /**\n     * Attribute name.\n     * @type {String}\n     */\n    this.name = name || null;\n    /**\n     * Attribute type, valid types are String/Boolean/Number/Array/Object/Link/Reference.\n     * @type {String}\n     */\n    this.type = type || null;\n    /**\n     * Type of link, valid types are Default/Reverse.\n     * @type {String}\n     */\n    this.linkType = linkType || null;\n    /**\n     * Define list of Component that can be linked with this.\n     * @type {String[]}\n     */\n    this.linkRef = linkRef || [];\n    /**\n     * Color of the link.\n     * @type {String}\n     */\n    this.linkColor = linkColor || 'black';\n    /**\n     * Width of the link.\n     * @type {Number}\n     */\n    this.linkWidth = linkWidth || 2;\n    /**\n     * Dash style of the link. See stroke-dasharray of svg.\n     * @type {Number[]}\n     */\n    this.linkDashStyle = linkDashStyle || null;\n    /**\n     * Define list of Component that can be the container of this component.\n     * @type {String[]}\n     */\n    this.containerRef = containerRef || [];\n    /**\n     * Defined attributes for this type.\n     * @type {ComponentAttributeDefinition[]}\n     */\n    this.definedAttributes = definedAttributes || [];\n    /**\n     * Attribute is required.\n     * @type {Boolean}\n     */\n    this.required = required || false;\n    /**\n     * Rules of this type of Attribute.\n     * @type {Object}\n     */\n    this.rules = {\n      values: null,\n      min: null,\n      max: null,\n      regex: null,\n      ...rules,\n    };\n  }\n}\n\nexport default ComponentAttributeDefinition;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/models/ComponentAttributeDefinition.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 146,
    "kind": "class",
    "name": "ComponentAttributeDefinition",
    "memberof": "src/models/ComponentAttributeDefinition.js",
    "static": true,
    "longname": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/models/ComponentAttributeDefinition.js",
    "importStyle": "ComponentAttributeDefinition",
    "description": "Define Attributes for type.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 147,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition#constructor",
    "access": "public",
    "description": "Default constructor",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.name",
        "description": "Attribute name."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.type",
        "description": "Attribute type,\nvalid types are String/Boolean/Number/Array/Object/Link/Reference."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.linkType",
        "description": "Type of link, valid types are Default/Reverse."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "props.linkRef",
        "description": "Reference of accepted component for link."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'black'",
        "defaultRaw": "'black'",
        "name": "props.linkColor",
        "description": "Color of the link."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "2",
        "defaultRaw": 2,
        "name": "props.linkWidth",
        "description": "Width of the link."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": true,
        "name": "props.linkDashStyle",
        "description": "Dash style of the link. See stroke-dasharray of svg."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "props.containerRef",
        "description": "Reference of accepted component for container."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "props.required",
        "description": "Attribute is required."
      },
      {
        "nullable": null,
        "types": [
          "ComponentAttributeDefinition[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "props.definedAttributes",
        "description": "Defined attributes for\nthis type."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "props.rules",
        "description": "Rules of this type of Attribute."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "props.rules.values",
        "description": "Default values of attribute."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "props.rules.min",
        "description": "Minimum value of Attribute."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "props.rules.max",
        "description": "Maximum value of Attribute."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.rules.regex",
        "description": "Regular expression to constrain the format of the value."
      }
    ]
  },
  {
    "__docId__": 148,
    "kind": "member",
    "name": "name",
    "memberof": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition",
    "static": false,
    "longname": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition#name",
    "access": "public",
    "description": "Attribute name.",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 149,
    "kind": "member",
    "name": "type",
    "memberof": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition",
    "static": false,
    "longname": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition#type",
    "access": "public",
    "description": "Attribute type, valid types are String/Boolean/Number/Array/Object/Link/Reference.",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "linkType",
    "memberof": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition",
    "static": false,
    "longname": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition#linkType",
    "access": "public",
    "description": "Type of link, valid types are Default/Reverse.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "linkRef",
    "memberof": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition",
    "static": false,
    "longname": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition#linkRef",
    "access": "public",
    "description": "Define list of Component that can be linked with this.",
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "String[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "linkColor",
    "memberof": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition",
    "static": false,
    "longname": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition#linkColor",
    "access": "public",
    "description": "Color of the link.",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "linkWidth",
    "memberof": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition",
    "static": false,
    "longname": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition#linkWidth",
    "access": "public",
    "description": "Width of the link.",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 154,
    "kind": "member",
    "name": "linkDashStyle",
    "memberof": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition",
    "static": false,
    "longname": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition#linkDashStyle",
    "access": "public",
    "description": "Dash style of the link. See stroke-dasharray of svg.",
    "lineNumber": 92,
    "type": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "containerRef",
    "memberof": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition",
    "static": false,
    "longname": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition#containerRef",
    "access": "public",
    "description": "Define list of Component that can be the container of this component.",
    "lineNumber": 97,
    "type": {
      "nullable": null,
      "types": [
        "String[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 156,
    "kind": "member",
    "name": "definedAttributes",
    "memberof": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition",
    "static": false,
    "longname": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition#definedAttributes",
    "access": "public",
    "description": "Defined attributes for this type.",
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "ComponentAttributeDefinition[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "required",
    "memberof": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition",
    "static": false,
    "longname": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition#required",
    "access": "public",
    "description": "Attribute is required.",
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "rules",
    "memberof": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition",
    "static": false,
    "longname": "src/models/ComponentAttributeDefinition.js~ComponentAttributeDefinition#rules",
    "access": "public",
    "description": "Rules of this type of Attribute.",
    "lineNumber": 112,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 159,
    "kind": "file",
    "name": "src/models/ComponentDefinition.js",
    "content": "/**\n * Definition of Component's datas and constraints\n */\nclass ComponentDefinition {\n  /**\n   * Default constructor.\n   *\n   * @param {String} [props.type] - The type of the associated component.\n   * @param {String} [props.icon] - The icon's name of this type of component.\n   * @param {String} [props.model] - Name of SVG template to render this type of component.\n   * @param {String[]} [props.parentTypes=[]] - The list of types that can be the parent.\n   * @param {String[]} [props.childrenTypes=[]] - The list of types that can be the children.\n   * @param {ComponentAttributeDefinition[]} [props.definedAttributes=[]] - Defined attributes for\n   * this type.\n   * @param {Boolean} [props.isContainer=false] - Boolean means if this type can be a parent.\n   * instantiated components.\n   */\n  constructor(props = {\n    type: null,\n    icon: null,\n    model: null,\n    parentTypes: [],\n    childrenTypes: [],\n    definedAttributes: [],\n    isContainer: false,\n  }) {\n    const {\n      type,\n      icon,\n      model,\n      parentTypes,\n      childrenTypes,\n      definedAttributes,\n      isContainer,\n    } = props;\n\n    /**\n     * The type of the associated component.\n     * @type {String}\n     */\n    this.type = type || null;\n    /**\n     * The icon's name of this type of component.\n     * @type {String}\n     */\n    this.icon = icon || null;\n    /**\n     * Name of SVG model to render this type of component.\n     * @type {String}\n     */\n    this.model = model || null;\n    /**\n     * The list of types that can be the parent.\n     * @type {String[]}\n     */\n    this.parentTypes = parentTypes || [];\n    /**\n     * The list of types that can be the children.\n     * @type {String[]}\n     */\n    this.childrenTypes = childrenTypes || [];\n    /**\n     * Defined attributes for this type.\n     * @type {ComponentAttributeDefinition[]}\n     */\n    this.definedAttributes = definedAttributes || [];\n    /**\n     * Boolean means if this type can be a parent.\n     * @type {Boolean}\n     */\n    this.isContainer = isContainer === undefined ? false : isContainer;\n  }\n}\n\nexport default ComponentDefinition;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/models/ComponentDefinition.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 160,
    "kind": "class",
    "name": "ComponentDefinition",
    "memberof": "src/models/ComponentDefinition.js",
    "static": true,
    "longname": "src/models/ComponentDefinition.js~ComponentDefinition",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/models/ComponentDefinition.js",
    "importStyle": "ComponentDefinition",
    "description": "Definition of Component's datas and constraints",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 161,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/models/ComponentDefinition.js~ComponentDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/ComponentDefinition.js~ComponentDefinition#constructor",
    "access": "public",
    "description": "Default constructor.",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.type",
        "description": "The type of the associated component."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.icon",
        "description": "The icon's name of this type of component."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.model",
        "description": "Name of SVG template to render this type of component."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "props.parentTypes",
        "description": "The list of types that can be the parent."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "props.childrenTypes",
        "description": "The list of types that can be the children."
      },
      {
        "nullable": null,
        "types": [
          "ComponentAttributeDefinition[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "props.definedAttributes",
        "description": "Defined attributes for\nthis type."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "props.isContainer",
        "description": "Boolean means if this type can be a parent.\ninstantiated components."
      }
    ]
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "type",
    "memberof": "src/models/ComponentDefinition.js~ComponentDefinition",
    "static": false,
    "longname": "src/models/ComponentDefinition.js~ComponentDefinition#type",
    "access": "public",
    "description": "The type of the associated component.",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "icon",
    "memberof": "src/models/ComponentDefinition.js~ComponentDefinition",
    "static": false,
    "longname": "src/models/ComponentDefinition.js~ComponentDefinition#icon",
    "access": "public",
    "description": "The icon's name of this type of component.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "model",
    "memberof": "src/models/ComponentDefinition.js~ComponentDefinition",
    "static": false,
    "longname": "src/models/ComponentDefinition.js~ComponentDefinition#model",
    "access": "public",
    "description": "Name of SVG model to render this type of component.",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "parentTypes",
    "memberof": "src/models/ComponentDefinition.js~ComponentDefinition",
    "static": false,
    "longname": "src/models/ComponentDefinition.js~ComponentDefinition#parentTypes",
    "access": "public",
    "description": "The list of types that can be the parent.",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "String[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "childrenTypes",
    "memberof": "src/models/ComponentDefinition.js~ComponentDefinition",
    "static": false,
    "longname": "src/models/ComponentDefinition.js~ComponentDefinition#childrenTypes",
    "access": "public",
    "description": "The list of types that can be the children.",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "String[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "definedAttributes",
    "memberof": "src/models/ComponentDefinition.js~ComponentDefinition",
    "static": false,
    "longname": "src/models/ComponentDefinition.js~ComponentDefinition#definedAttributes",
    "access": "public",
    "description": "Defined attributes for this type.",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "ComponentAttributeDefinition[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "isContainer",
    "memberof": "src/models/ComponentDefinition.js~ComponentDefinition",
    "static": false,
    "longname": "src/models/ComponentDefinition.js~ComponentDefinition#isContainer",
    "access": "public",
    "description": "Boolean means if this type can be a parent.",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 169,
    "kind": "file",
    "name": "src/models/ComponentDrawOption.js",
    "content": "/**\n * Option for the Component drawing.\n */\nclass ComponentDrawOption {\n  /**\n   * Default constructor\n   *\n   * @param {Number} [props.x] - X Position of Component.\n   * @param {Number} [props.y] - Y Position of Component.\n   * @param {Number} [props.width] - Width of Component in pixel.\n   * @param {Number} [props.height] - Height of Component in pixel.\n   * @param {Boolean} [props.needsResizing] - Flag to indicate if\n   * the width and height need re-computing.\n   */\n  constructor(props = {\n    x: null,\n    y: null,\n    width: null,\n    height: null,\n    needsResizing: false,\n  }) {\n    const {\n      x,\n      y,\n      width,\n      height,\n      needsResizing,\n    } = props;\n\n    /**\n     * X Position of Component.\n     * @type {Number}\n     */\n    this.x = x || null;\n    /**\n     * Y Position of Component.\n     * @type {Number}\n     */\n    this.y = y || null;\n    /**\n     * Width of Component in pixel.\n     * @type {Number}\n     */\n    this.width = width || null;\n    /**\n     * Height of Component in pixel.\n     * @type {Number}\n     */\n    this.height = height || null;\n    this.needsResizing = needsResizing || false;\n  }\n}\n\nexport default ComponentDrawOption;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/models/ComponentDrawOption.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 170,
    "kind": "class",
    "name": "ComponentDrawOption",
    "memberof": "src/models/ComponentDrawOption.js",
    "static": true,
    "longname": "src/models/ComponentDrawOption.js~ComponentDrawOption",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/models/ComponentDrawOption.js",
    "importStyle": "ComponentDrawOption",
    "description": "Option for the Component drawing.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 171,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/models/ComponentDrawOption.js~ComponentDrawOption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/ComponentDrawOption.js~ComponentDrawOption#constructor",
    "access": "public",
    "description": "Default constructor",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "props.x",
        "description": "X Position of Component."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "props.y",
        "description": "Y Position of Component."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "props.width",
        "description": "Width of Component in pixel."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "props.height",
        "description": "Height of Component in pixel."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "props.needsResizing",
        "description": "Flag to indicate if\nthe width and height need re-computing."
      }
    ]
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "x",
    "memberof": "src/models/ComponentDrawOption.js~ComponentDrawOption",
    "static": false,
    "longname": "src/models/ComponentDrawOption.js~ComponentDrawOption#x",
    "access": "public",
    "description": "X Position of Component.",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 173,
    "kind": "member",
    "name": "y",
    "memberof": "src/models/ComponentDrawOption.js~ComponentDrawOption",
    "static": false,
    "longname": "src/models/ComponentDrawOption.js~ComponentDrawOption#y",
    "access": "public",
    "description": "Y Position of Component.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 174,
    "kind": "member",
    "name": "width",
    "memberof": "src/models/ComponentDrawOption.js~ComponentDrawOption",
    "static": false,
    "longname": "src/models/ComponentDrawOption.js~ComponentDrawOption#width",
    "access": "public",
    "description": "Width of Component in pixel.",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 175,
    "kind": "member",
    "name": "height",
    "memberof": "src/models/ComponentDrawOption.js~ComponentDrawOption",
    "static": false,
    "longname": "src/models/ComponentDrawOption.js~ComponentDrawOption#height",
    "access": "public",
    "description": "Height of Component in pixel.",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 176,
    "kind": "member",
    "name": "needsResizing",
    "memberof": "src/models/ComponentDrawOption.js~ComponentDrawOption",
    "static": false,
    "longname": "src/models/ComponentDrawOption.js~ComponentDrawOption#needsResizing",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "file",
    "name": "src/models/ComponentLink.js",
    "content": "import FileInformation from './FileInformation';\n\n/**\n * Class that links Components together.\n * @extends {FileInformation}\n */\nclass ComponentLink extends FileInformation {\n  /**\n   * Default constructor.\n   *\n   * @param {String} [props.source] - Id of component can be the source in a link.\n   * @param {String} [props.target] - Id of component can be the target of the link.\n   * @param {ComponentLinkDefinition} [props.definition] - The definition of the link.\n   */\n  constructor(props = {\n    source: null,\n    target: null,\n    definition: null,\n  }) {\n    super();\n    const {\n      source,\n      target,\n      definition,\n    } = props;\n\n    /**\n     * Use for drawer to get the type of object.\n     * @type {String}\n     * @private\n     */\n    this.__class = 'Link';\n    /**\n     * Where the link is created.\n     * @type {Object}\n     */\n    this.source = source || null;\n    /**\n     * Target of the link.\n     * @type\n     */\n    this.target = target || null;\n    /**\n     * The definition of the link.\n     * @type {ComponentLinkDefinition}\n     */\n    this.definition = definition || null;\n  }\n}\n\nexport default ComponentLink;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/models/ComponentLink.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 178,
    "kind": "class",
    "name": "ComponentLink",
    "memberof": "src/models/ComponentLink.js",
    "static": true,
    "longname": "src/models/ComponentLink.js~ComponentLink",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/models/ComponentLink.js",
    "importStyle": "ComponentLink",
    "description": "Class that links Components together.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "FileInformation"
    ]
  },
  {
    "__docId__": 179,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/models/ComponentLink.js~ComponentLink",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/ComponentLink.js~ComponentLink#constructor",
    "access": "public",
    "description": "Default constructor.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.source",
        "description": "Id of component can be the source in a link."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.target",
        "description": "Id of component can be the target of the link."
      },
      {
        "nullable": null,
        "types": [
          "ComponentLinkDefinition"
        ],
        "spread": false,
        "optional": true,
        "name": "props.definition",
        "description": "The definition of the link."
      }
    ]
  },
  {
    "__docId__": 180,
    "kind": "member",
    "name": "__class",
    "memberof": "src/models/ComponentLink.js~ComponentLink",
    "static": false,
    "longname": "src/models/ComponentLink.js~ComponentLink#__class",
    "access": "private",
    "description": "Use for drawer to get the type of object.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 181,
    "kind": "member",
    "name": "source",
    "memberof": "src/models/ComponentLink.js~ComponentLink",
    "static": false,
    "longname": "src/models/ComponentLink.js~ComponentLink#source",
    "access": "public",
    "description": "Where the link is created.",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 182,
    "kind": "member",
    "name": "target",
    "memberof": "src/models/ComponentLink.js~ComponentLink",
    "static": false,
    "longname": "src/models/ComponentLink.js~ComponentLink#target",
    "access": "public",
    "description": "Target of the link.",
    "lineNumber": 42,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "member",
    "name": "definition",
    "memberof": "src/models/ComponentLink.js~ComponentLink",
    "static": false,
    "longname": "src/models/ComponentLink.js~ComponentLink#definition",
    "access": "public",
    "description": "The definition of the link.",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "ComponentLinkDefinition"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 184,
    "kind": "file",
    "name": "src/models/ComponentLinkDefinition.js",
    "content": "/**\n * Definition of the link between components.\n */\nclass ComponentLinkDefinition {\n  /**\n   * Default constructor.\n   *\n   * @param {String} [props.attributeRef] - Reference of attribute can be the link.\n   * @param {String} [props.sourceRef] - Reference of component can be the source in a link.\n   * @param {String} [props.targetRef] - Reference of component can be the target of the link.\n   * @param {String} [props.type] - Representation of the link.\n   * @param {String} [props.color='black'] - Color of the link.\n   * @param {Number} [props.width=2] - Width of the link.\n   * @param {Number[]} [props.dashStyle] - Dash style of the link. See stroke-dasharray of svg.\n   */\n  constructor(props = {\n    attributeRef: null,\n    sourceRef: null,\n    targetRef: null,\n    type: null,\n    color: 'black',\n    width: 2,\n    dashStyle: null,\n  }) {\n    const {\n      attributeRef,\n      sourceRef,\n      targetRef,\n      type,\n      color,\n      width,\n      dashStyle,\n    } = props;\n\n    /**\n     * Reference of attribute can be the link.\n     * @type {String}\n     */\n    this.attributeRef = attributeRef || null;\n    /**\n     * Reference of component can be the source in a link.\n     * @type {String}\n     */\n    this.sourceRef = sourceRef || null;\n    /**\n     * Reference of component can be the target of the link.\n     * @type {String}\n     */\n    this.targetRef = targetRef || null;\n    /**\n     * Representation of the link.\n     * @type {String}\n     */\n    this.type = type || null;\n    /**\n     * Color of the link.\n     * @type {String}\n     */\n    this.color = color || 'black';\n    /**\n     * Color of the link.\n     * @type {Number}\n     */\n    this.width = width || 2;\n    /**\n     * Dash style of the link. See stroke-dasharray of svg.\n     * @type {Number[]}\n     */\n    this.dashStyle = dashStyle || null;\n  }\n}\n\nexport default ComponentLinkDefinition;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/models/ComponentLinkDefinition.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 185,
    "kind": "class",
    "name": "ComponentLinkDefinition",
    "memberof": "src/models/ComponentLinkDefinition.js",
    "static": true,
    "longname": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/models/ComponentLinkDefinition.js",
    "importStyle": "ComponentLinkDefinition",
    "description": "Definition of the link between components.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 186,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition#constructor",
    "access": "public",
    "description": "Default constructor.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.attributeRef",
        "description": "Reference of attribute can be the link."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.sourceRef",
        "description": "Reference of component can be the source in a link."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.targetRef",
        "description": "Reference of component can be the target of the link."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.type",
        "description": "Representation of the link."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'black'",
        "defaultRaw": "'black'",
        "name": "props.color",
        "description": "Color of the link."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "2",
        "defaultRaw": 2,
        "name": "props.width",
        "description": "Width of the link."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": true,
        "name": "props.dashStyle",
        "description": "Dash style of the link. See stroke-dasharray of svg."
      }
    ]
  },
  {
    "__docId__": 187,
    "kind": "member",
    "name": "attributeRef",
    "memberof": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition",
    "static": false,
    "longname": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition#attributeRef",
    "access": "public",
    "description": "Reference of attribute can be the link.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 188,
    "kind": "member",
    "name": "sourceRef",
    "memberof": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition",
    "static": false,
    "longname": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition#sourceRef",
    "access": "public",
    "description": "Reference of component can be the source in a link.",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "targetRef",
    "memberof": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition",
    "static": false,
    "longname": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition#targetRef",
    "access": "public",
    "description": "Reference of component can be the target of the link.",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "type",
    "memberof": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition",
    "static": false,
    "longname": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition#type",
    "access": "public",
    "description": "Representation of the link.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "color",
    "memberof": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition",
    "static": false,
    "longname": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition#color",
    "access": "public",
    "description": "Color of the link.",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "width",
    "memberof": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition",
    "static": false,
    "longname": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition#width",
    "access": "public",
    "description": "Color of the link.",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "dashStyle",
    "memberof": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition",
    "static": false,
    "longname": "src/models/ComponentLinkDefinition.js~ComponentLinkDefinition#dashStyle",
    "access": "public",
    "description": "Dash style of the link. See stroke-dasharray of svg.",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 194,
    "kind": "file",
    "name": "src/models/DefaultData.js",
    "content": "import packageInfo from '../../package.json';\nimport Component from './Component';\nimport ComponentLink from './ComponentLink';\nimport ComponentLinkDefinition from './ComponentLinkDefinition';\n\nconst CORE_VERSION = packageInfo.version;\n\n/**\n * Class that represents all data of a Plugin.\n */\nclass DefaultData {\n  /**\n   * Default constructor.\n   * @param {String} props.name - Name of plugin.\n   * @param {String} props.version - Version of plugin.\n   * @param {Component[]} [props.components=[]] - Components array.\n   * @param {Object} [props.definitions={}] - All definitions.\n   * @param {ComponentDefinition[]} [props.definitions.components=[]] - All component definitions.\n   * @param {ComponentLinkDefinition[]} [props.definitions.link=[]] - All component link\n   * definitions.\n   * @param {ParseError[]} [props.parseErrors=[]] - Parse errors array.\n   */\n  constructor(props = {\n    name: null,\n    version: null,\n    components: [],\n    definitions: {\n      components: [],\n      links: [],\n    },\n    parseErrors: [],\n  }) {\n    /**\n     * Plugin name.\n     * @type {String}\n     */\n    this.name = props.name || null;\n    /**\n     * Plugin version.\n     * @type {String}\n     */\n    this.version = props.version || null;\n    /**\n     * All plugin components.\n     * @type {Component[]}\n     */\n    this.components = props.components || [];\n    /**\n     * All plugin definitions.\n     * @type {{components: ComponentDefinition[], links: ComponentLinkDefinition[]}}\n     */\n    this.definitions = {\n      components: [],\n      links: [],\n    };\n    if (props.definitions) {\n      this.definitions.components = props.definitions.components || [];\n      this.definitions.links = props.definitions.links || [];\n    }\n    /**\n     * All parser errors.\n     * @type {ParseError[]}\n     */\n    this.parseErrors = props.parseErrors || [];\n  }\n\n  /**\n   * Get version of plugin core.\n   * @return {String} Version of plugin core.\n   */\n  get coreVersion() {\n    return CORE_VERSION;\n  }\n\n  /**\n   * Get component by id.\n   * @param {String} id - Component id.\n   * @return {Component} Component or null.\n   */\n  getComponentById(id) {\n    return this.components.find((component) => component.id === id) || null;\n  }\n\n  /**\n   * Get all components corresponding to the given type.\n   * @param {String} type - Type of component to find.\n   * @return {Component[]} Component list.\n   */\n  getComponentsByType(type) {\n    return this.components.filter(({ definition }) => definition && definition.type === type);\n  }\n\n  /**\n   * Create new component.\n   * @param {String} id - Component id.\n   * @param {ComponentDefinition} definition - Component definition.\n   */\n  addComponent(id, definition) {\n    this.components.push(new Component({\n      id,\n      name: id,\n      definition,\n    }));\n  }\n\n  /**\n   * Remove component by id and all attributes that used this component id.\n   * @param {String} id - Component id.\n   */\n  removeComponentById(id) {\n    this.getChildren(id).forEach((component) => this.removeComponentById(component.id));\n\n    this.components = this.components.filter((component) => component.id !== id);\n\n    this.components.forEach((component) => {\n      component.removeLinkAttribute(id);\n    });\n  }\n\n  /**\n   * Remove link attribute in components.\n   * @param {ComponentLink} link - Link to remove.\n   */\n  removeLink(link) {\n    const { source, target } = link;\n    const { attributeRef } = link.definition;\n\n    this.getComponentById(source).removeLinkAttribute(target, attributeRef);\n  }\n\n  /**\n   * Get all links from all component attributes.\n   * @return {ComponentLink[]}\n   */\n  getLinks() {\n    const links = [];\n\n    this.definitions.links.forEach((definition) => {\n      const components = this.getComponentsByType(definition.sourceRef);\n\n      components.forEach((component) => {\n        const attribute = component.getAttributeByName(definition.attributeRef);\n\n        if (!attribute) {\n          return;\n        }\n\n        attribute.value.forEach((value) => links.push(new ComponentLink({\n          definition,\n          source: component.id,\n          target: value,\n        })));\n      });\n    });\n\n    return links;\n  }\n\n  /**\n   * Initialize all link definitions from all component attribute definitions.\n   */\n  initLinkDefinitions() {\n    this.definitions.links = [];\n    this.definitions.components.forEach(({ type, definedAttributes }) => {\n      this.__setLinkDefinitions(type, definedAttributes);\n    });\n  }\n\n  /**\n   * Set link definition in link definitions\n   * @param {String} type - Component type to link.\n   * @param {ComponentAttributeDefinition[]} definedAttributes - Component attribute definitions.\n   * @private\n   */\n  __setLinkDefinitions(type, definedAttributes) {\n    definedAttributes.forEach((attributeDefinition) => {\n      if (attributeDefinition.type === 'Link') {\n        const linkDefinition = new ComponentLinkDefinition({\n          type: attributeDefinition.linkType,\n          attributeRef: attributeDefinition.name,\n          sourceRef: type,\n          targetRef: attributeDefinition.linkRef,\n          color: attributeDefinition.linkColor,\n          width: attributeDefinition.linkWidth,\n          dashStyle: attributeDefinition.linkDashStyle,\n        });\n\n        this.definitions.links.push(linkDefinition);\n      } else if (attributeDefinition.type === 'Object') {\n        this.__setLinkDefinitions(type, attributeDefinition.definedAttributes);\n      }\n    });\n  }\n\n  /**\n   * Get children of container component with corresponding id.\n   * @param {String} id - Component container id.\n   * @return {Component[]} Children component array.\n   */\n  getChildren(id) {\n    return this.components.filter((component) => component.getContainerId() === id);\n  }\n}\n\nexport default DefaultData;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/models/DefaultData.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 195,
    "kind": "variable",
    "name": "CORE_VERSION",
    "memberof": "src/models/DefaultData.js",
    "static": true,
    "longname": "src/models/DefaultData.js~CORE_VERSION",
    "access": "public",
    "export": false,
    "importPath": "leto-modelizer-plugin-core/src/models/DefaultData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 196,
    "kind": "class",
    "name": "DefaultData",
    "memberof": "src/models/DefaultData.js",
    "static": true,
    "longname": "src/models/DefaultData.js~DefaultData",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/models/DefaultData.js",
    "importStyle": "DefaultData",
    "description": "Class that represents all data of a Plugin.",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 197,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#constructor",
    "access": "public",
    "description": "Default constructor.",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "props.name",
        "description": "Name of plugin."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "props.version",
        "description": "Version of plugin."
      },
      {
        "nullable": null,
        "types": [
          "Component[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "props.components",
        "description": "Components array."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "props.definitions",
        "description": "All definitions."
      },
      {
        "nullable": null,
        "types": [
          "ComponentDefinition[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "props.definitions.components",
        "description": "All component definitions."
      },
      {
        "nullable": null,
        "types": [
          "ComponentLinkDefinition[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "props.definitions.link",
        "description": "All component link\ndefinitions."
      },
      {
        "nullable": null,
        "types": [
          "ParseError[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "props.parseErrors",
        "description": "Parse errors array."
      }
    ]
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "name",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#name",
    "access": "public",
    "description": "Plugin name.",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "version",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#version",
    "access": "public",
    "description": "Plugin version.",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "components",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#components",
    "access": "public",
    "description": "All plugin components.",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "Component[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "definitions",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#definitions",
    "access": "public",
    "description": "All plugin definitions.",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "{components: ComponentDefinition[], links: ComponentLinkDefinition[]}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "parseErrors",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#parseErrors",
    "access": "public",
    "description": "All parser errors.",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "ParseError[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 203,
    "kind": "get",
    "name": "coreVersion",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#coreVersion",
    "access": "public",
    "description": "Get version of plugin core.",
    "lineNumber": 71,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Version of plugin core."
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "getComponentById",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#getComponentById",
    "access": "public",
    "description": "Get component by id.",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Component id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": "Component or null."
    }
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "getComponentsByType",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#getComponentsByType",
    "access": "public",
    "description": "Get all components corresponding to the given type.",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Type of component to find."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component[]"
      ],
      "spread": false,
      "description": "Component list."
    }
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "addComponent",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#addComponent",
    "access": "public",
    "description": "Create new component.",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Component id."
      },
      {
        "nullable": null,
        "types": [
          "ComponentDefinition"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": "Component definition."
      }
    ],
    "return": null
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "removeComponentById",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#removeComponentById",
    "access": "public",
    "description": "Remove component by id and all attributes that used this component id.",
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Component id."
      }
    ],
    "return": null
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "removeLink",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#removeLink",
    "access": "public",
    "description": "Remove link attribute in components.",
    "lineNumber": 124,
    "params": [
      {
        "nullable": null,
        "types": [
          "ComponentLink"
        ],
        "spread": false,
        "optional": false,
        "name": "link",
        "description": "Link to remove."
      }
    ],
    "return": null
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "getLinks",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#getLinks",
    "access": "public",
    "description": "Get all links from all component attributes.",
    "lineNumber": 135,
    "return": {
      "nullable": null,
      "types": [
        "ComponentLink[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "initLinkDefinitions",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#initLinkDefinitions",
    "access": "public",
    "description": "Initialize all link definitions from all component attribute definitions.",
    "lineNumber": 162,
    "params": [],
    "return": null
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "__setLinkDefinitions",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#__setLinkDefinitions",
    "access": "private",
    "description": "Set link definition in link definitions",
    "lineNumber": 175,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Component type to link."
      },
      {
        "nullable": null,
        "types": [
          "ComponentAttributeDefinition[]"
        ],
        "spread": false,
        "optional": false,
        "name": "definedAttributes",
        "description": "Component attribute definitions."
      }
    ],
    "return": null
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "getChildren",
    "memberof": "src/models/DefaultData.js~DefaultData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultData.js~DefaultData#getChildren",
    "access": "public",
    "description": "Get children of container component with corresponding id.",
    "lineNumber": 200,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Component container id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component[]"
      ],
      "spread": false,
      "description": "Children component array."
    }
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "src/models/DefaultPlugin.js",
    "content": "import DefaultData from './DefaultData';\nimport DefaultDrawer from '../draw/DefaultDrawer';\nimport DefaultMetadata from '../metadata/DefaultMetadata';\nimport DefaultParser from '../parser/DefaultParser';\nimport DefaultRender from '../render/DefaultRender';\n\n/**\n * Default plugin structure.\n */\nclass DefaultPlugin {\n  /**\n   * Default constructor.\n   * @param {DefaultData} props.pluginData - Plugin data storage.\n   * @param {DefaultDrawer} props.pluginDrawer - Plugin drawer.\n   * @param {DefaultMetadata} props.pluginMetadata - Plugin metadata.\n   * @param {DefaultParser} props.pluginParser - Plugin parser.\n   * @param {DefaultRender} props.pluginRenderer - Plugin renderer.\n   */\n  constructor(props = {\n    pluginData: null,\n    pluginDrawer: null,\n    pluginMetadata: null,\n    pluginParser: null,\n    pluginRenderer: null,\n  }) {\n    /**\n     * Plugin data storage.\n     * @type {DefaultData}\n     */\n    this.data = props.pluginData || new DefaultData();\n    /**\n     * Plugin drawer.\n     * @type {DefaultDrawer}\n     * @private\n     */\n    this.__drawer = props.pluginDrawer || new DefaultDrawer(this.data);\n    /**\n     * Plugin metadata.\n     * @type {DefaultMetadata}\n     * @private\n     */\n    this.__metadata = props.pluginMetadata || new DefaultMetadata(this.data);\n    /**\n     * Plugin parser.\n     * @type {DefaultParser}\n     * @private\n     */\n    this.__parser = props.pluginParser || new DefaultParser(this.data);\n    /**\n     * Plugin renderer.\n     * @type {DefaultRender}\n     * @private\n     */\n    this.__renderer = props.pluginRenderer || new DefaultRender(this.data);\n  }\n\n  /**\n   * Init method, to call once before all plugin usages.\n   * Set events in plugin and initialize metadata.\n   * @param {Function} [events.SelectEvent.next] - Function to emit selection event, use by the\n   * @param {Function} [events.UpdateEvent.next] - Function to emit update event, use by the\n   * drawer.\n   */\n  init(events) {\n    this.__drawer.setEvents(events);\n    this.__metadata.parse();\n    this.data.initLinkDefinitions();\n  }\n\n  /**\n   * Set resources in plugin.\n   * @param {Object} [resources=null] - Object that contains resources.\n   */\n  initResources(resources) {\n    this.__drawer.resources = resources;\n  }\n\n  /**\n   * Draws all data in the html element defined by the id.\n   * @param {String} id - Html id, without '#'.\n   */\n  draw(id) {\n    this.__drawer.draw(id);\n  }\n\n  /**\n   * Convert the content of files into plugin data.\n   * Configuration file is used for setting up the components' configuration.\n   * @param {FileInput} file - Configuration file of components.\n   * @param {FileInput[]} [inputs=[]] - File inputs you want to parse.\n   */\n  parse(file, inputs) {\n    this.__parser.parse(inputs);\n    this.__parser.parseConfiguration(file);\n  }\n\n  /**\n   * Indicate if this parser can parse this file.\n   * @param {FileInformation} fileInformation - File information.\n   * @return {Boolean} - Boolean that indicates if this file can be parsed or not.\n   */\n  isParsable(fileInformation) {\n    return this.__parser.isParsable(fileInformation);\n  }\n\n  /**\n   * Return all generated files from plugin data.\n   * Configuration file is used for saving the components' configuration.\n   * @param {FileInput} configurationFile - Configuration file of components.\n   * @param {FileInput[]} files - File inputs you want to render.\n   * @return {FileInput[]} All generated files.\n   */\n  render(configurationFile, files) {\n    this.__renderer.renderConfiguration(configurationFile);\n\n    return this.__renderer.render(files);\n  }\n}\n\nexport default DefaultPlugin;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/models/DefaultPlugin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "class",
    "name": "DefaultPlugin",
    "memberof": "src/models/DefaultPlugin.js",
    "static": true,
    "longname": "src/models/DefaultPlugin.js~DefaultPlugin",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/models/DefaultPlugin.js",
    "importStyle": "DefaultPlugin",
    "description": "Default plugin structure.",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 216,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/models/DefaultPlugin.js~DefaultPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultPlugin.js~DefaultPlugin#constructor",
    "access": "public",
    "description": "Default constructor.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "DefaultData"
        ],
        "spread": false,
        "optional": false,
        "name": "props.pluginData",
        "description": "Plugin data storage."
      },
      {
        "nullable": null,
        "types": [
          "DefaultDrawer"
        ],
        "spread": false,
        "optional": false,
        "name": "props.pluginDrawer",
        "description": "Plugin drawer."
      },
      {
        "nullable": null,
        "types": [
          "DefaultMetadata"
        ],
        "spread": false,
        "optional": false,
        "name": "props.pluginMetadata",
        "description": "Plugin metadata."
      },
      {
        "nullable": null,
        "types": [
          "DefaultParser"
        ],
        "spread": false,
        "optional": false,
        "name": "props.pluginParser",
        "description": "Plugin parser."
      },
      {
        "nullable": null,
        "types": [
          "DefaultRender"
        ],
        "spread": false,
        "optional": false,
        "name": "props.pluginRenderer",
        "description": "Plugin renderer."
      }
    ]
  },
  {
    "__docId__": 217,
    "kind": "member",
    "name": "data",
    "memberof": "src/models/DefaultPlugin.js~DefaultPlugin",
    "static": false,
    "longname": "src/models/DefaultPlugin.js~DefaultPlugin#data",
    "access": "public",
    "description": "Plugin data storage.",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "DefaultData"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "__drawer",
    "memberof": "src/models/DefaultPlugin.js~DefaultPlugin",
    "static": false,
    "longname": "src/models/DefaultPlugin.js~DefaultPlugin#__drawer",
    "access": "private",
    "description": "Plugin drawer.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "DefaultDrawer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 219,
    "kind": "member",
    "name": "__metadata",
    "memberof": "src/models/DefaultPlugin.js~DefaultPlugin",
    "static": false,
    "longname": "src/models/DefaultPlugin.js~DefaultPlugin#__metadata",
    "access": "private",
    "description": "Plugin metadata.",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "DefaultMetadata"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 220,
    "kind": "member",
    "name": "__parser",
    "memberof": "src/models/DefaultPlugin.js~DefaultPlugin",
    "static": false,
    "longname": "src/models/DefaultPlugin.js~DefaultPlugin#__parser",
    "access": "private",
    "description": "Plugin parser.",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "DefaultParser"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 221,
    "kind": "member",
    "name": "__renderer",
    "memberof": "src/models/DefaultPlugin.js~DefaultPlugin",
    "static": false,
    "longname": "src/models/DefaultPlugin.js~DefaultPlugin#__renderer",
    "access": "private",
    "description": "Plugin renderer.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "DefaultRender"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "init",
    "memberof": "src/models/DefaultPlugin.js~DefaultPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultPlugin.js~DefaultPlugin#init",
    "access": "public",
    "description": "Init method, to call once before all plugin usages.\nSet events in plugin and initialize metadata.",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "events.SelectEvent.next",
        "description": "Function to emit selection event, use by the"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "events.UpdateEvent.next",
        "description": "Function to emit update event, use by the\ndrawer."
      }
    ],
    "return": null
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "initResources",
    "memberof": "src/models/DefaultPlugin.js~DefaultPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultPlugin.js~DefaultPlugin#initResources",
    "access": "public",
    "description": "Set resources in plugin.",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "resources",
        "description": "Object that contains resources."
      }
    ],
    "return": null
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "draw",
    "memberof": "src/models/DefaultPlugin.js~DefaultPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultPlugin.js~DefaultPlugin#draw",
    "access": "public",
    "description": "Draws all data in the html element defined by the id.",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Html id, without '#'."
      }
    ],
    "return": null
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "parse",
    "memberof": "src/models/DefaultPlugin.js~DefaultPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultPlugin.js~DefaultPlugin#parse",
    "access": "public",
    "description": "Convert the content of files into plugin data.\nConfiguration file is used for setting up the components' configuration.",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "FileInput"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "Configuration file of components."
      },
      {
        "nullable": null,
        "types": [
          "FileInput[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "inputs",
        "description": "File inputs you want to parse."
      }
    ],
    "return": null
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "isParsable",
    "memberof": "src/models/DefaultPlugin.js~DefaultPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultPlugin.js~DefaultPlugin#isParsable",
    "access": "public",
    "description": "Indicate if this parser can parse this file.",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "FileInformation"
        ],
        "spread": false,
        "optional": false,
        "name": "fileInformation",
        "description": "File information."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Boolean that indicates if this file can be parsed or not."
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "render",
    "memberof": "src/models/DefaultPlugin.js~DefaultPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/DefaultPlugin.js~DefaultPlugin#render",
    "access": "public",
    "description": "Return all generated files from plugin data.\nConfiguration file is used for saving the components' configuration.",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "FileInput"
        ],
        "spread": false,
        "optional": false,
        "name": "configurationFile",
        "description": "Configuration file of components."
      },
      {
        "nullable": null,
        "types": [
          "FileInput[]"
        ],
        "spread": false,
        "optional": false,
        "name": "files",
        "description": "File inputs you want to render."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FileInput[]"
      ],
      "spread": false,
      "description": "All generated files."
    }
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "src/models/FileInformation.js",
    "content": "/**\n * Object to store all file information.\n */\nclass FileInformation {\n  /**\n   * Default constructor.\n   * @param {String} [props.path=null] - File path.\n   */\n  constructor(props = { path: null }) {\n    const {\n      path,\n    } = props;\n\n    /**\n     * Path of the file.\n     * @type {String}\n     */\n    this.path = path || null;\n  }\n\n  /**\n   * Get file name.\n   * @return {String} File name\n   */\n  get fileName() {\n    return this.path ? this.path.replace(/^.*[\\\\/]/, '') : null;\n  }\n}\n\nexport default FileInformation;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/models/FileInformation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "class",
    "name": "FileInformation",
    "memberof": "src/models/FileInformation.js",
    "static": true,
    "longname": "src/models/FileInformation.js~FileInformation",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/models/FileInformation.js",
    "importStyle": "FileInformation",
    "description": "Object to store all file information.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 230,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/models/FileInformation.js~FileInformation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/FileInformation.js~FileInformation#constructor",
    "access": "public",
    "description": "Default constructor.",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "props.path",
        "description": "File path."
      }
    ]
  },
  {
    "__docId__": 231,
    "kind": "member",
    "name": "path",
    "memberof": "src/models/FileInformation.js~FileInformation",
    "static": false,
    "longname": "src/models/FileInformation.js~FileInformation#path",
    "access": "public",
    "description": "Path of the file.",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 232,
    "kind": "get",
    "name": "fileName",
    "memberof": "src/models/FileInformation.js~FileInformation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/FileInformation.js~FileInformation#fileName",
    "access": "public",
    "description": "Get file name.",
    "lineNumber": 25,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "File name"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "file",
    "name": "src/models/FileInput.js",
    "content": "import FileInformation from './FileInformation';\n\n/**\n * Object to store the file content.\n * @extends {FileInformation}\n */\nclass FileInput extends FileInformation {\n  /**\n   * Default constructor.\n   * @param {String} [props.path=null] - File path.\n   * @param {String} [props.name=null] - File name.\n   * @param {String} [props.content=null] - File content.\n   */\n  constructor(props = { path: null, name: null, content: null }) {\n    super(props);\n    const {\n      content,\n    } = props;\n\n    /**\n     * Content of the file.\n     * @type {String}\n     */\n    this.content = content || null;\n  }\n}\n\nexport default FileInput;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/models/FileInput.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 234,
    "kind": "class",
    "name": "FileInput",
    "memberof": "src/models/FileInput.js",
    "static": true,
    "longname": "src/models/FileInput.js~FileInput",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/models/FileInput.js",
    "importStyle": "FileInput",
    "description": "Object to store the file content.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "FileInformation"
    ]
  },
  {
    "__docId__": 235,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/models/FileInput.js~FileInput",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/models/FileInput.js~FileInput#constructor",
    "access": "public",
    "description": "Default constructor.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "props.path",
        "description": "File path."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "props.name",
        "description": "File name."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "props.content",
        "description": "File content."
      }
    ]
  },
  {
    "__docId__": 236,
    "kind": "member",
    "name": "content",
    "memberof": "src/models/FileInput.js~FileInput",
    "static": false,
    "longname": "src/models/FileInput.js~FileInput#content",
    "access": "public",
    "description": "Content of the file.",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 237,
    "kind": "file",
    "name": "src/parser/DefaultParser.js",
    "content": "import ComponentDrawOption from '../models/ComponentDrawOption';\n\n/**\n * Class that used for parsing.\n * @interface\n */\nclass DefaultParser {\n  /**\n   * Default constructor.\n   * @param {DefaultData} pluginData - Plugin data storage.\n   */\n  constructor(pluginData) {\n    /**\n     * Plugin data storage.\n     * @type {DefaultData}\n     */\n    this.pluginData = pluginData || null;\n  }\n\n  /**\n   * Convert the content of files into Components.\n   * @param {FileInput[]} [inputs=[]] - Data you want to parse.\n   */\n  parse(inputs = []) { /* eslint no-unused-vars: 0 */ // --> OFF\n    this.pluginData.components = [];\n    this.pluginData.parseErrors = [];\n  }\n\n  /**\n   * Set configuration into Components.\n   * @param {FileInput} file - Configuration file of components.\n   */\n  parseConfiguration(file) {\n    const config = JSON.parse(file.content);\n\n    if (!config[this.pluginData.name]) {\n      return;\n    }\n\n    Object.keys(config[this.pluginData.name]).forEach((id) => {\n      const component = this.pluginData.getComponentById(id);\n\n      if (!component || !config[this.pluginData.name][id]) {\n        return;\n      }\n\n      component.drawOption = new ComponentDrawOption(config[this.pluginData.name][id]);\n    });\n  }\n\n  /**\n   * Indicate if this parser can parse this file.\n   * @param {FileInformation} fileInformation - File information.\n   * @return {Boolean} - Boolean that indicates if this file can be parsed or not.\n   */\n  isParsable(fileInformation) {\n    return fileInformation !== undefined && fileInformation !== null;\n  }\n}\n\nexport default DefaultParser;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/parser/DefaultParser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 238,
    "kind": "class",
    "name": "DefaultParser",
    "memberof": "src/parser/DefaultParser.js",
    "static": true,
    "longname": "src/parser/DefaultParser.js~DefaultParser",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/parser/DefaultParser.js",
    "importStyle": "DefaultParser",
    "description": "Class that used for parsing.",
    "lineNumber": 7,
    "interface": true
  },
  {
    "__docId__": 239,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/DefaultParser.js~DefaultParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/DefaultParser.js~DefaultParser#constructor",
    "access": "public",
    "description": "Default constructor.",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "DefaultData"
        ],
        "spread": false,
        "optional": false,
        "name": "pluginData",
        "description": "Plugin data storage."
      }
    ]
  },
  {
    "__docId__": 240,
    "kind": "member",
    "name": "pluginData",
    "memberof": "src/parser/DefaultParser.js~DefaultParser",
    "static": false,
    "longname": "src/parser/DefaultParser.js~DefaultParser#pluginData",
    "access": "public",
    "description": "Plugin data storage.",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "DefaultData"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 241,
    "kind": "method",
    "name": "parse",
    "memberof": "src/parser/DefaultParser.js~DefaultParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/DefaultParser.js~DefaultParser#parse",
    "access": "public",
    "description": "Convert the content of files into Components.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "FileInput[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "inputs",
        "description": "Data you want to parse."
      }
    ],
    "return": null
  },
  {
    "__docId__": 242,
    "kind": "method",
    "name": "parseConfiguration",
    "memberof": "src/parser/DefaultParser.js~DefaultParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/DefaultParser.js~DefaultParser#parseConfiguration",
    "access": "public",
    "description": "Set configuration into Components.",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "FileInput"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "Configuration file of components."
      }
    ],
    "return": null
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "isParsable",
    "memberof": "src/parser/DefaultParser.js~DefaultParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/DefaultParser.js~DefaultParser#isParsable",
    "access": "public",
    "description": "Indicate if this parser can parse this file.",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "FileInformation"
        ],
        "spread": false,
        "optional": false,
        "name": "fileInformation",
        "description": "File information."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Boolean that indicates if this file can be parsed or not."
    }
  },
  {
    "__docId__": 244,
    "kind": "file",
    "name": "src/render/DefaultRender.js",
    "content": "/**\n * Class that compile a Component to data.\n * @interface\n */\nimport FileInput from '../models/FileInput';\n\nclass DefaultRender {\n  /**\n   * Default constructor.\n   * @param {DefaultData} pluginData - Plugin data storage.\n   */\n  constructor(pluginData) {\n    /**\n     * Plugin data storage.\n     * @type {DefaultData}\n     */\n    this.pluginData = pluginData || null;\n  }\n\n  /**\n   * Transform all provided components in file inputs.\n   * @param {FileInput[]} files - Files managed by the plugin.\n   * @return {FileInput[]} - Generated files from components.\n   */\n  render(files = []) {\n    const rendererFiles = files.reduce((acc, file) => {\n      acc[file.path] = '';\n\n      return acc;\n    }, {});\n\n    this.renderFiles().forEach((file) => {\n      rendererFiles[file.path] = file.content;\n    });\n\n    return Object.keys(rendererFiles)\n      .map((path) => new FileInput({ path, content: rendererFiles[path] }));\n  }\n\n  /**\n   * Transform all provided components in file inputs.\n   * @return {FileInput[]} - Generated files from components.\n   */\n  renderFiles() {\n    return [];\n  }\n\n  /**\n   * Update configuration file content according to components data.\n   * @param {FileInput} file - Configuration file of components.\n   */\n  renderConfiguration(file) {\n    const configuration = {};\n\n    this.pluginData.components\n      .filter((component) => component.drawOption)\n      .forEach((component) => {\n        configuration[component.id] = component.drawOption;\n      });\n\n    const config = JSON.parse(file.content) || {};\n\n    config[this.pluginData.name] = configuration;\n\n    file.content = JSON.stringify(config, (key, value) => (value === null ? undefined : value));\n  }\n}\n\nexport default DefaultRender;\n",
    "static": true,
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/src/render/DefaultRender.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 245,
    "kind": "class",
    "name": "DefaultRender",
    "memberof": "src/render/DefaultRender.js",
    "static": true,
    "longname": "src/render/DefaultRender.js~DefaultRender",
    "access": "public",
    "export": true,
    "importPath": "leto-modelizer-plugin-core/src/render/DefaultRender.js",
    "importStyle": "DefaultRender",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 246,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/render/DefaultRender.js~DefaultRender",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/render/DefaultRender.js~DefaultRender#constructor",
    "access": "public",
    "description": "Default constructor.",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "DefaultData"
        ],
        "spread": false,
        "optional": false,
        "name": "pluginData",
        "description": "Plugin data storage."
      }
    ]
  },
  {
    "__docId__": 247,
    "kind": "member",
    "name": "pluginData",
    "memberof": "src/render/DefaultRender.js~DefaultRender",
    "static": false,
    "longname": "src/render/DefaultRender.js~DefaultRender#pluginData",
    "access": "public",
    "description": "Plugin data storage.",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "DefaultData"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "render",
    "memberof": "src/render/DefaultRender.js~DefaultRender",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/render/DefaultRender.js~DefaultRender#render",
    "access": "public",
    "description": "Transform all provided components in file inputs.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "FileInput[]"
        ],
        "spread": false,
        "optional": false,
        "name": "files",
        "description": "Files managed by the plugin."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FileInput[]"
      ],
      "spread": false,
      "description": "Generated files from components."
    }
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "renderFiles",
    "memberof": "src/render/DefaultRender.js~DefaultRender",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/render/DefaultRender.js~DefaultRender#renderFiles",
    "access": "public",
    "description": "Transform all provided components in file inputs.",
    "lineNumber": 44,
    "return": {
      "nullable": null,
      "types": [
        "FileInput[]"
      ],
      "spread": false,
      "description": "Generated files from components."
    },
    "params": []
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "renderConfiguration",
    "memberof": "src/render/DefaultRender.js~DefaultRender",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/render/DefaultRender.js~DefaultRender#renderConfiguration",
    "access": "public",
    "description": "Update configuration file content according to components data.",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "FileInput"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "Configuration file of components."
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# leto-modelizer-plugin-core\n\nLibrary that contains all models for modeling tools in Leto's projects.\n\nThis library is used to create your own plugin for the [Leto Modelizer](https://github.com/ditrit/leto-modelizer) tool.\n\n## Get started\n\n### Install\n\n```\nnpm install --save \"git://github.com/ditrit/leto-modelizer-plugin-core.git\"\n```\n\n### Usage\n\nHere is all imports you can use in your plugin:\n\n```js\nimport {\n  Component,\n  ComponentDefinition,\n  ComponentAttributeDefinition,\n  ComponentDrawOption,\n  ComponentAttribute,\n  ComponentLink,\n  ComponentLinkDefinition,\n  DefaultDrawer,\n  DefaultMetadata,\n  DefaultParser,\n  DefaultRender,\n  ParseError,\n  FileInformation,\n  FileInput,\n  DefaultData,\n  DefaultPlugin,\n} from \"leto-modelizer-plugin-core\";\n```\n\nFor more information about all imports please refer to [technical documentation](https://ditrit.io/leto-modelizer-plugin-core/) and [project template](https://github.com/ditrit/leto-modelizer-plugin-template).\n\nYou can use it in that way:\n\n```js\nimport { DefaultParser } from 'leto-modelizer-plugin-core';\n\nclass FruitParser extends DefaultParser {\n  parse(inputs) {\n    // Write your own parser here\n    return {\n      components: [/* ... */], // Generated components from parser\n      links: [/* ... */]       // Generated component links from parser\n    }\n  }\n}\n\nexport default FruitParser;\n```\n\nTo see a complete example, please refer to [iactor](https://github.com/ditrit/iactor).\n\n## How to create your plugin\n\nYou can use [this template repository](https://github.com/ditrit/leto-modelizer-plugin-template) to create your own plugin.\n\nThe project template leto-modelizer-plugin-template provides you the default structure of a plugin and all useful scripts to generate resources and other.\n\nIt is strongly recommended to use it and the following documentation will make references to it.\n\nFurthermore, in this template there are code comments to explain how to override methods/classes and usages. \n\n### Default Plugin structure\n\nFor your plugin to be used by `Leto Modelizer`, it needs to have this structure:\n\n```js\n// src/index.js\nexport default new DefaultPlugin({\n  pluginData: MyPluginData,         // MyPluginData has to extend DefaultData\n  pluginDrawer: MyPluginDrawer,     // MyPluginDrawer has to extend DefaultDrawer\n  pluginMetadata: MyPluginMetadata, // MyPluginMetadata has to extend DefaultMetadata\n  pluginParser: MyPluginParser,     // MyPluginParser has to extend DefaultParser\n  pluginRenderer: MyPluginRenderer, // MyPluginRenderer has to extend DefaultRender\n});\n```\n\n### How it works\n\n| Plugin lifecycle |\n| :--: |\n| <img height=\"400\" src=\"/documentations/lifecycle.svg\"/> |\n\nThis is the default lifecycle of plugin usage in Leto Modelizer.\n\n### Plugin creation\n\nCreate you plugin project from [leto-modelizer-plugin-template](https://github.com/ditrit/leto-modelizer-plugin-template) and follow the readme section of the template project.\n\n### Technical documentation\n\nTechnical documentation can be found [here](https://ditrit.io/leto-modelizer-plugin-core/).\n\n## Default commands\n\nExplanation of usage of scripts in `package.json`.\n\n### build\n\nBuild this project in `dist` folder.\n\n### build:docs\n\nGenerate documentation with esdoc.\n\n### demo\n\nStart a sample integration vue dev server.\n\n### lint\n\nRun eslint check on the project.\n\n### lint:fix\n\nApply default fix for eslint in project.\n\n### lint:report\n\nGenerate report of lint issues for sonar.\n\n### lint:watch\n\nTo use in development, to see current lint errors with auto-refresh.\n\n### test\n\nRun all the unit tests.\n\n### test:coverage\n\nGenerate coverage report of the unit tests.\n\n## Development\n\n### Directory structure\n\nThis is the default directory structure we use for this project:\n\n```\nleto-modelizer-plugin-core\n├ docs                 ⇨ Contains all files generated by esdoc\n├ reports              ⇨ Contains all the report files for sonar\n├ src                  ⇨ Contains all files for modeling tools\n│ └  models            ⇨ Contains all the models\n└ tests                ⇨ Contains all files related to the tests\n```\n\n### How to release\n\nWe use [Semantic Versioning](https://semver.org/spec/v2.0.0.html) as guideline for the version management.\n\nSteps to release:\n- Checkout a branch `release/vX.Y.Z` from the latest `dev`.\n- Improve your version number in `package.json`, `package-lock.json` and `changelog.md`.\n- Verify the content of the `changelog.md`.\n- Build the project\n- Commit your modification (with the `dist` content) with this commit's name `Release version X.Y.Z`.\n- Create a pull request on github to this branch in `dev`.\n- After the previous PR is merged, create a pull request on github to `dev` in `main`.\n- After the previous PR is merged, tag the `main` branch with `vX.Y.Z`\n- After the tag is push, make the release on the tag in GitHub\n\n### Git: Default branches\n\nThe default branch is `main`, we can't commit on it and we can only make a pull request to add some code.\n\nRelease tags are only on the `main` branch.\n\n### Git: Branch naming policy\n\nThere is the branch naming policy: `[BRANCH_TYPE]/[BRANCH_NAME]`\n\n* `BRANCH_TYPE` is a prefix to describe the purpose of the branch, accepted prefix are:\n  * `feature`, used for feature development\n  * `bugfix`, used for bug fix\n  * `improvement`, used for refacto\n  * `library`, used for updating library\n  * `prerelease`, used for preparing the branch for the release\n  * `release`, used for releasing project\n  * `hotfix`, used for applying a hotfix on main\n* `BRANCH_NAME` is managed by this regex: `[a-z0-9_-]` (`_` is used as space character).\n\nExamples:\n\n```\n# BAD\nadd_some_test\n# GOOD\nimprovement/unit_test\n\n# BAD\nfeature/adding-some-feature\n# GOOD\nfeature/adding_some_feature\n```\n",
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"leto-modelizer-plugin-core\",\n  \"version\": \"0.11.0\",\n  \"description\": \"Library that contains all models for modelling tools in Leto's projects.\",\n  \"main\": \"dist/leto-modelizer-plugin-core.js\",\n  \"exports\": {\n    \".\": {\n      \"development\": \"./src\",\n      \"default\": \"./dist/leto-modelizer-plugin-core.js\"\n    }\n  },\n  \"scripts\": {\n    \"build\": \"webpack\",\n    \"build:docs\": \"esdoc\",\n    \"demo\": \"npm --prefix ./demo install && npm --prefix ./demo run demo\",\n    \"lint\": \"eslint .\",\n    \"lint:fix\": \"eslint . --fix\",\n    \"lint:report\": \"eslint src -f json-relative > eslint.json\",\n    \"lint:watch\": \"esw --no-ignore -w src\",\n    \"test\": \"jest\",\n    \"test:coverage\": \"NODE_OPTIONS=--experimental-vm-modules jest --coverage\",\n    \"test:e2e\": \"cypress run --spec **/*.feature\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/ditrit/leto-modelizer-plugin-core.git\"\n  },\n  \"author\": \"Vincent Moittie\",\n  \"license\": \"Mozilla Public License Version 2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/ditrit/leto-modelizer-plugin-core/issues\"\n  },\n  \"homepage\": \"https://github.com/ditrit/leto-modelizer-plugin-core#readme\",\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.18.6\",\n    \"@babel/preset-env\": \"^7.18.6\",\n    \"@badeball/cypress-cucumber-preprocessor\": \"^11.5.1\",\n    \"@cypress/browserify-preprocessor\": \"^3.0.2\",\n    \"babel-jest\": \"^28.1.1\",\n    \"babel-loader\": \"^8.2.5\",\n    \"cypress\": \"^10.3.1\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^8.18.0\",\n    \"eslint-config-airbnb-base\": \"^15.0.0\",\n    \"eslint-formatter-json-relative\": \"^0.1.0\",\n    \"eslint-plugin-cypress\": \"^2.12.1\",\n    \"eslint-plugin-import\": \"^2.26.0\",\n    \"eslint-watch\": \"^8.0.0\",\n    \"jest\": \"^28.1.1\",\n    \"jest-environment-jsdom\": \"^28.1.1\",\n    \"jest-sonar-reporter\": \"^2.0.0\",\n    \"webpack\": \"^5.72.0\",\n    \"webpack-cli\": \"^4.9.2\"\n  },\n  \"dependencies\": {\n    \"nunjucks\": \"^3.2.3\",\n    \"d3\": \"^7.6.1\",\n    \"d3-hierarchy\": \"^3.1.2\"\n  }\n}\n",
    "longname": "/home/vmoittie/Workspaces/leto-modelizer-plugin-core/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]